// Code generated by protoc-gen-go.
// source: moderator.proto
// DO NOT EDIT!

/*
Package moderator is a generated protocol buffer package.

It is generated from these files:
	moderator.proto

It has these top-level messages:
	Moderator
	DisputeUpdate
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Moderator_Fee_FeeType int32

const (
	Moderator_Fee_FIXED                 Moderator_Fee_FeeType = 0
	Moderator_Fee_PERCENTAGE            Moderator_Fee_FeeType = 1
	Moderator_Fee_FIXED_PLUS_PERCENTAGE Moderator_Fee_FeeType = 2
)

var Moderator_Fee_FeeType_name = map[int32]string{
	0: "FIXED",
	1: "PERCENTAGE",
	2: "FIXED_PLUS_PERCENTAGE",
}
var Moderator_Fee_FeeType_value = map[string]int32{
	"FIXED":                 0,
	"PERCENTAGE":            1,
	"FIXED_PLUS_PERCENTAGE": 2,
}

func (x Moderator_Fee_FeeType) String() string {
	return proto.EnumName(Moderator_Fee_FeeType_name, int32(x))
}
func (Moderator_Fee_FeeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0, 0} }

type Moderator struct {
	Description        string         `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	TermsAndConditions string         `protobuf:"bytes,2,opt,name=termsAndConditions" json:"termsAndConditions,omitempty"`
	Languages          []string       `protobuf:"bytes,3,rep,name=languages" json:"languages,omitempty"`
	Fee                *Moderator_Fee `protobuf:"bytes,4,opt,name=fee" json:"fee,omitempty"`
}

func (m *Moderator) Reset()                    { *m = Moderator{} }
func (m *Moderator) String() string            { return proto.CompactTextString(m) }
func (*Moderator) ProtoMessage()               {}
func (*Moderator) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Moderator) GetFee() *Moderator_Fee {
	if m != nil {
		return m.Fee
	}
	return nil
}

type Moderator_Fee struct {
	FixedFee   *Moderator_Price      `protobuf:"bytes,1,opt,name=fixedFee" json:"fixedFee,omitempty"`
	Percentage float32               `protobuf:"fixed32,2,opt,name=percentage" json:"percentage,omitempty"`
	FeeType    Moderator_Fee_FeeType `protobuf:"varint,3,opt,name=feeType,enum=Moderator_Fee_FeeType" json:"feeType,omitempty"`
}

func (m *Moderator_Fee) Reset()                    { *m = Moderator_Fee{} }
func (m *Moderator_Fee) String() string            { return proto.CompactTextString(m) }
func (*Moderator_Fee) ProtoMessage()               {}
func (*Moderator_Fee) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

func (m *Moderator_Fee) GetFixedFee() *Moderator_Price {
	if m != nil {
		return m.FixedFee
	}
	return nil
}

type Moderator_Price struct {
	CurrencyCode string `protobuf:"bytes,1,opt,name=currencyCode" json:"currencyCode,omitempty"`
	Amount       uint64 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *Moderator_Price) Reset()                    { *m = Moderator_Price{} }
func (m *Moderator_Price) String() string            { return proto.CompactTextString(m) }
func (*Moderator_Price) ProtoMessage()               {}
func (*Moderator_Price) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 1} }

type DisputeUpdate struct {
	OrderId            string      `protobuf:"bytes,1,opt,name=orderId" json:"orderId,omitempty"`
	PayoutAddress      string      `protobuf:"bytes,2,opt,name=payoutAddress" json:"payoutAddress,omitempty"`
	Outpoints          []*Outpoint `protobuf:"bytes,3,rep,name=outpoints" json:"outpoints,omitempty"`
	SerializedContract []byte      `protobuf:"bytes,4,opt,name=serializedContract,proto3" json:"serializedContract,omitempty"`
}

func (m *DisputeUpdate) Reset()                    { *m = DisputeUpdate{} }
func (m *DisputeUpdate) String() string            { return proto.CompactTextString(m) }
func (*DisputeUpdate) ProtoMessage()               {}
func (*DisputeUpdate) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *DisputeUpdate) GetOutpoints() []*Outpoint {
	if m != nil {
		return m.Outpoints
	}
	return nil
}

func init() {
	proto.RegisterType((*Moderator)(nil), "Moderator")
	proto.RegisterType((*Moderator_Fee)(nil), "Moderator.Fee")
	proto.RegisterType((*Moderator_Price)(nil), "Moderator.Price")
	proto.RegisterType((*DisputeUpdate)(nil), "DisputeUpdate")
	proto.RegisterEnum("Moderator_Fee_FeeType", Moderator_Fee_FeeType_name, Moderator_Fee_FeeType_value)
}

var fileDescriptor4 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x92, 0xef, 0x6a, 0xdb, 0x30,
	0x14, 0xc5, 0xe7, 0xb8, 0x6d, 0xe6, 0xeb, 0x36, 0x0d, 0x82, 0x15, 0x2f, 0x8c, 0x11, 0xcc, 0x60,
	0xfd, 0x30, 0xcc, 0xf0, 0x1e, 0x60, 0x04, 0xd7, 0x1d, 0x85, 0xfd, 0x09, 0x5a, 0x0b, 0xfb, 0x56,
	0x34, 0xeb, 0xb6, 0x08, 0x1a, 0x49, 0x48, 0x32, 0x2c, 0x7b, 0xa2, 0xc1, 0xde, 0x63, 0xcf, 0x35,
	0x59, 0xb5, 0x5b, 0x07, 0xfa, 0xc1, 0xe0, 0xfb, 0x3b, 0xc7, 0xba, 0x07, 0x1f, 0xc1, 0xf1, 0x46,
	0x71, 0x34, 0xcc, 0x29, 0x53, 0x68, 0xa3, 0x9c, 0x5a, 0x1c, 0x37, 0x4a, 0x3a, 0xc3, 0x1a, 0x67,
	0xef, 0x41, 0xfe, 0x37, 0x86, 0xe4, 0xcb, 0x60, 0x22, 0x4b, 0x48, 0x39, 0xda, 0xc6, 0x08, 0xed,
	0x84, 0x92, 0x59, 0xb4, 0x8c, 0x4e, 0x13, 0x3a, 0x46, 0xa4, 0x00, 0xe2, 0xd0, 0x6c, 0xec, 0x4a,
	0xf2, 0x4a, 0x49, 0x2e, 0x3a, 0x68, 0xb3, 0x49, 0x30, 0x3e, 0xa1, 0x90, 0x57, 0x90, 0xdc, 0x31,
	0x79, 0xdb, 0xb2, 0x5b, 0xb4, 0x59, 0xbc, 0x8c, 0xbd, 0xed, 0x11, 0xf8, 0x7d, 0xf1, 0x0d, 0x62,
	0xb6, 0xe7, 0x3f, 0x4f, 0xcb, 0x59, 0xf1, 0x10, 0xa4, 0x38, 0x47, 0xa4, 0x9d, 0xb4, 0xf8, 0x17,
	0x41, 0xec, 0x07, 0xf2, 0x0e, 0x9e, 0xdf, 0x88, 0x5f, 0xc8, 0xfd, 0x7b, 0x88, 0x95, 0x96, 0xf3,
	0x91, 0x7d, 0x6d, 0x44, 0x83, 0xf4, 0xc1, 0x41, 0x5e, 0x03, 0x68, 0x34, 0x0d, 0x4a, 0xe7, 0xd7,
	0x84, 0x74, 0x13, 0x3a, 0x22, 0xe4, 0x3d, 0x4c, 0xfd, 0xe1, 0x97, 0x5b, 0x8d, 0x3e, 0x53, 0x74,
	0x3a, 0x2b, 0x4f, 0x76, 0x77, 0x77, 0x4f, 0xa7, 0xd2, 0xc1, 0x96, 0x7f, 0x84, 0x69, 0xcf, 0x48,
	0x02, 0xfb, 0xe7, 0x17, 0x3f, 0xea, 0xb3, 0xf9, 0x33, 0x32, 0x03, 0x58, 0xd7, 0xb4, 0xaa, 0xbf,
	0x5e, 0xae, 0x3e, 0xd5, 0xf3, 0x88, 0xbc, 0x84, 0x17, 0x41, 0xba, 0x5e, 0x7f, 0xbe, 0xfa, 0x7e,
	0x3d, 0x92, 0x26, 0x8b, 0x0a, 0xf6, 0x43, 0x4a, 0x92, 0xc3, 0x61, 0xd3, 0x1a, 0x83, 0xb2, 0xd9,
	0x56, 0x7e, 0x67, 0xff, 0x93, 0x77, 0x18, 0x39, 0x81, 0x03, 0xb6, 0x51, 0xad, 0x74, 0x21, 0xfb,
	0x1e, 0xed, 0xa7, 0xfc, 0x4f, 0x04, 0x47, 0x67, 0xc2, 0xea, 0xd6, 0xe1, 0x95, 0xe6, 0xcc, 0x21,
	0xc9, 0x60, 0xaa, 0x8c, 0x4f, 0x7e, 0xc1, 0xfb, 0x83, 0x86, 0x91, 0xbc, 0x81, 0x23, 0xcd, 0xb6,
	0xaa, 0x75, 0x2b, 0xce, 0x0d, 0xda, 0xa1, 0xa4, 0x5d, 0x48, 0xde, 0x42, 0xe2, 0x27, 0xad, 0x84,
	0x74, 0xf7, 0xfd, 0xa4, 0x65, 0x52, 0x7c, 0xeb, 0x09, 0x7d, 0xd4, 0xba, 0xe2, 0x2d, 0x1a, 0xc1,
	0xee, 0xc4, 0x6f, 0xec, 0x0a, 0x0e, 0xb7, 0x28, 0x34, 0x77, 0x48, 0x9f, 0x50, 0x7e, 0x1e, 0x84,
	0xfb, 0xf5, 0xe1, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x09, 0x93, 0xc1, 0x9c, 0x83, 0x02, 0x00,
	0x00,
}
