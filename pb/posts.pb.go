// Code generated by protoc-gen-go. DO NOT EDIT.
// source: posts.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Post struct {
	Slug      string                     `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
	VendorID  *ID                        `protobuf:"bytes,2,opt,name=vendorID" json:"vendorID,omitempty"`
	Title     string                     `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	LongForm  string                     `protobuf:"bytes,4,opt,name=longForm" json:"longForm,omitempty"`
	Images    []*Post_Image              `protobuf:"bytes,5,rep,name=images" json:"images,omitempty"`
	Reference *Post_Reference            `protobuf:"bytes,6,opt,name=reference" json:"reference,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Post) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Post) GetVendorID() *ID {
	if m != nil {
		return m.VendorID
	}
	return nil
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetLongForm() string {
	if m != nil {
		return m.LongForm
	}
	return ""
}

func (m *Post) GetImages() []*Post_Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Post) GetReference() *Post_Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *Post) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Post_Image struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Original string `protobuf:"bytes,2,opt,name=original" json:"original,omitempty"`
	Large    string `protobuf:"bytes,3,opt,name=large" json:"large,omitempty"`
	Medium   string `protobuf:"bytes,4,opt,name=medium" json:"medium,omitempty"`
	Small    string `protobuf:"bytes,5,opt,name=small" json:"small,omitempty"`
	Tiny     string `protobuf:"bytes,6,opt,name=tiny" json:"tiny,omitempty"`
}

func (m *Post_Image) Reset()                    { *m = Post_Image{} }
func (m *Post_Image) String() string            { return proto.CompactTextString(m) }
func (*Post_Image) ProtoMessage()               {}
func (*Post_Image) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0, 0} }

func (m *Post_Image) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Post_Image) GetOriginal() string {
	if m != nil {
		return m.Original
	}
	return ""
}

func (m *Post_Image) GetLarge() string {
	if m != nil {
		return m.Large
	}
	return ""
}

func (m *Post_Image) GetMedium() string {
	if m != nil {
		return m.Medium
	}
	return ""
}

func (m *Post_Image) GetSmall() string {
	if m != nil {
		return m.Small
	}
	return ""
}

func (m *Post_Image) GetTiny() string {
	if m != nil {
		return m.Tiny
	}
	return ""
}

type Post_Reference struct {
	PeerId   string   `protobuf:"bytes,1,opt,name=peerId" json:"peerId,omitempty"`
	Listings []string `protobuf:"bytes,2,rep,name=listings" json:"listings,omitempty"`
}

func (m *Post_Reference) Reset()                    { *m = Post_Reference{} }
func (m *Post_Reference) String() string            { return proto.CompactTextString(m) }
func (*Post_Reference) ProtoMessage()               {}
func (*Post_Reference) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0, 1} }

func (m *Post_Reference) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *Post_Reference) GetListings() []string {
	if m != nil {
		return m.Listings
	}
	return nil
}

type SignedPost struct {
	Post      *Post  `protobuf:"bytes,1,opt,name=post" json:"post,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *SignedPost) Reset()                    { *m = SignedPost{} }
func (m *SignedPost) String() string            { return proto.CompactTextString(m) }
func (*SignedPost) ProtoMessage()               {}
func (*SignedPost) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *SignedPost) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *SignedPost) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *SignedPost) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*Post)(nil), "Post")
	proto.RegisterType((*Post_Image)(nil), "Post.Image")
	proto.RegisterType((*Post_Reference)(nil), "Post.Reference")
	proto.RegisterType((*SignedPost)(nil), "SignedPost")
}

func init() { proto.RegisterFile("posts.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x92, 0xcf, 0x8a, 0xdb, 0x30,
	0x10, 0xc6, 0x49, 0xfc, 0xa7, 0xeb, 0x71, 0x61, 0x41, 0x94, 0xa2, 0x9a, 0xc2, 0x9a, 0xed, 0x25,
	0x97, 0x7a, 0x21, 0xbd, 0xf4, 0x56, 0x28, 0x4b, 0xc1, 0xb7, 0xa2, 0xf6, 0xd2, 0xde, 0x94, 0x58,
	0x51, 0x04, 0xb2, 0x64, 0x24, 0xb9, 0xd0, 0x27, 0xe9, 0x9b, 0xf5, 0x79, 0x16, 0x8d, 0x65, 0xe7,
	0x36, 0xdf, 0xcc, 0x37, 0x19, 0x7d, 0xbf, 0x18, 0xea, 0xc9, 0xfa, 0xe0, 0xbb, 0xc9, 0xd9, 0x60,
	0x9b, 0x07, 0x69, 0xad, 0xd4, 0xe2, 0x09, 0xd5, 0x69, 0xbe, 0x3c, 0x05, 0x35, 0x0a, 0x1f, 0xf8,
	0x38, 0x25, 0xc3, 0xfd, 0xd9, 0x9a, 0xe0, 0xf8, 0x79, 0xdd, 0x78, 0xfc, 0x9f, 0x41, 0xfe, 0xdd,
	0xfa, 0x40, 0x08, 0xe4, 0x5e, 0xcf, 0x92, 0xee, 0xda, 0xdd, 0xa1, 0x62, 0x58, 0x93, 0x07, 0xb8,
	0xfb, 0x23, 0xcc, 0x60, 0x5d, 0xff, 0x4c, 0xf7, 0xed, 0xee, 0x50, 0x1f, 0xb3, 0xae, 0x7f, 0x66,
	0x5b, 0x93, 0xbc, 0x81, 0x22, 0xa8, 0xa0, 0x05, 0xcd, 0x70, 0x6b, 0x11, 0xa4, 0x81, 0x3b, 0x6d,
	0x8d, 0xfc, 0x66, 0xdd, 0x48, 0x73, 0x1c, 0x6c, 0x9a, 0x7c, 0x80, 0x52, 0x8d, 0x5c, 0x0a, 0x4f,
	0x8b, 0x36, 0x3b, 0xd4, 0xc7, 0xba, 0x8b, 0xd7, 0xbb, 0x3e, 0xf6, 0x58, 0x1a, 0x91, 0x8f, 0x50,
	0x39, 0x71, 0x11, 0x4e, 0x98, 0xb3, 0xa0, 0x25, 0x1e, 0xbe, 0x5f, 0x7c, 0x6c, 0x6d, 0xb3, 0x9b,
	0x83, 0x7c, 0x86, 0x6a, 0xcb, 0x49, 0x5f, 0xa1, 0xbd, 0xe9, 0x16, 0x12, 0xdd, 0x4a, 0xa2, 0xfb,
	0xb9, 0x3a, 0xd8, 0xcd, 0xdc, 0xfc, 0xdb, 0x41, 0x81, 0xa7, 0xe3, 0x9b, 0x2f, 0x4a, 0x0b, 0xc3,
	0x47, 0x91, 0x10, 0x6c, 0x3a, 0xce, 0xac, 0x53, 0x52, 0x19, 0xae, 0x11, 0x43, 0xc5, 0x36, 0x1d,
	0x09, 0x68, 0xee, 0xe4, 0x46, 0x00, 0x05, 0x79, 0x0b, 0xe5, 0x28, 0x06, 0x35, 0xaf, 0xf9, 0x93,
	0x8a, 0x6e, 0x3f, 0x72, 0xad, 0x69, 0xb1, 0xb8, 0x51, 0x44, 0xf4, 0x41, 0x99, 0xbf, 0x98, 0xb4,
	0x62, 0x58, 0x37, 0x5f, 0xa0, 0xda, 0xb2, 0xc6, 0x9f, 0x9b, 0x84, 0x70, 0xfd, 0x90, 0x9e, 0x96,
	0x14, 0x82, 0x56, 0x3e, 0x28, 0x23, 0x3d, 0xdd, 0xb7, 0x19, 0x82, 0x4e, 0xfa, 0xf1, 0x17, 0xc0,
	0x0f, 0x25, 0x8d, 0x18, 0xf0, 0xdf, 0x7d, 0x07, 0x79, 0xfc, 0x4e, 0x70, 0xbf, 0x3e, 0x16, 0x08,
	0x93, 0x61, 0x2b, 0x5e, 0xbf, 0x72, 0x7f, 0x4d, 0xc9, 0xb0, 0x26, 0xef, 0xa1, 0xf2, 0x4a, 0x1a,
	0x1e, 0x66, 0xb7, 0x24, 0x7b, 0xcd, 0x6e, 0x8d, 0xaf, 0xf9, 0xef, 0xfd, 0x74, 0x3a, 0x95, 0x88,
	0xf6, 0xd3, 0x4b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x8e, 0xd9, 0x47, 0x81, 0x02, 0x00, 0x00,
}
