// Code generated by protoc-gen-go.
// source: contracts.proto
// DO NOT EDIT!

/*
Package contracts is a generated protocol buffer package.

It is generated from these files:
	contracts.proto

It has these top-level messages:
	RicardianContract
	Listing
	Order
	OrderConfirmation
	OrderFulfillment
	Rating
	Dispute
	DisputeResolution
	Refund
	ID
	Signatures
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Listing_Metadata_ContractType int32

const (
	Listing_Metadata_UNKNOWN       Listing_Metadata_ContractType = 0
	Listing_Metadata_PHYSICAL_GOOD Listing_Metadata_ContractType = 1
	Listing_Metadata_DIGITAL_GOOD  Listing_Metadata_ContractType = 2
	Listing_Metadata_SERVICE       Listing_Metadata_ContractType = 3
	Listing_Metadata_CROWD_FUND    Listing_Metadata_ContractType = 4
)

var Listing_Metadata_ContractType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PHYSICAL_GOOD",
	2: "DIGITAL_GOOD",
	3: "SERVICE",
	4: "CROWD_FUND",
}
var Listing_Metadata_ContractType_value = map[string]int32{
	"UNKNOWN":       0,
	"PHYSICAL_GOOD": 1,
	"DIGITAL_GOOD":  2,
	"SERVICE":       3,
	"CROWD_FUND":    4,
}

func (x Listing_Metadata_ContractType) String() string {
	return proto.EnumName(Listing_Metadata_ContractType_name, int32(x))
}
func (Listing_Metadata_ContractType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 0, 0}
}

type Listing_Metadata_ListingType int32

const (
	Listing_Metadata_NA          Listing_Metadata_ListingType = 0
	Listing_Metadata_FIXED_PRICE Listing_Metadata_ListingType = 1
	Listing_Metadata_AUCTION     Listing_Metadata_ListingType = 2
)

var Listing_Metadata_ListingType_name = map[int32]string{
	0: "NA",
	1: "FIXED_PRICE",
	2: "AUCTION",
}
var Listing_Metadata_ListingType_value = map[string]int32{
	"NA":          0,
	"FIXED_PRICE": 1,
	"AUCTION":     2,
}

func (x Listing_Metadata_ListingType) String() string {
	return proto.EnumName(Listing_Metadata_ListingType_name, int32(x))
}
func (Listing_Metadata_ListingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 0, 1}
}

type Listing_ShippingOption_ShippingType int32

const (
	Listing_ShippingOption_LOCAL_PICKUP Listing_ShippingOption_ShippingType = 0
	Listing_ShippingOption_FIXED_PRICE  Listing_ShippingOption_ShippingType = 1
)

var Listing_ShippingOption_ShippingType_name = map[int32]string{
	0: "LOCAL_PICKUP",
	1: "FIXED_PRICE",
}
var Listing_ShippingOption_ShippingType_value = map[string]int32{
	"LOCAL_PICKUP": 0,
	"FIXED_PRICE":  1,
}

func (x Listing_ShippingOption_ShippingType) String() string {
	return proto.EnumName(Listing_ShippingOption_ShippingType_name, int32(x))
}
func (Listing_ShippingOption_ShippingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 0}
}

type Listing_ShippingOption_ShippingRule_RuleType int32

const (
	Listing_ShippingOption_ShippingRule_QUANTITY_DISCOUNT          Listing_ShippingOption_ShippingRule_RuleType = 0
	Listing_ShippingOption_ShippingRule_FLAT_FEE_QUANTITY_RANGE    Listing_ShippingOption_ShippingRule_RuleType = 1
	Listing_ShippingOption_ShippingRule_FLAT_FEE_WEIGHT_RANGE      Listing_ShippingOption_ShippingRule_RuleType = 2
	Listing_ShippingOption_ShippingRule_COMBINED_SHIPPING_ADD      Listing_ShippingOption_ShippingRule_RuleType = 3
	Listing_ShippingOption_ShippingRule_COMBINED_SHIPPING_SUBTRACT Listing_ShippingOption_ShippingRule_RuleType = 4
)

var Listing_ShippingOption_ShippingRule_RuleType_name = map[int32]string{
	0: "QUANTITY_DISCOUNT",
	1: "FLAT_FEE_QUANTITY_RANGE",
	2: "FLAT_FEE_WEIGHT_RANGE",
	3: "COMBINED_SHIPPING_ADD",
	4: "COMBINED_SHIPPING_SUBTRACT",
}
var Listing_ShippingOption_ShippingRule_RuleType_value = map[string]int32{
	"QUANTITY_DISCOUNT":          0,
	"FLAT_FEE_QUANTITY_RANGE":    1,
	"FLAT_FEE_WEIGHT_RANGE":      2,
	"COMBINED_SHIPPING_ADD":      3,
	"COMBINED_SHIPPING_SUBTRACT": 4,
}

func (x Listing_ShippingOption_ShippingRule_RuleType) String() string {
	return proto.EnumName(Listing_ShippingOption_ShippingRule_RuleType_name, int32(x))
}
func (Listing_ShippingOption_ShippingRule_RuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 1, 0}
}

type Listing_Coupon_DiscountType int32

const (
	Listing_Coupon_NA           Listing_Coupon_DiscountType = 0
	Listing_Coupon_PERCENTAGE   Listing_Coupon_DiscountType = 1
	Listing_Coupon_FIXED_AMOUNT Listing_Coupon_DiscountType = 2
)

var Listing_Coupon_DiscountType_name = map[int32]string{
	0: "NA",
	1: "PERCENTAGE",
	2: "FIXED_AMOUNT",
}
var Listing_Coupon_DiscountType_value = map[string]int32{
	"NA":           0,
	"PERCENTAGE":   1,
	"FIXED_AMOUNT": 2,
}

func (x Listing_Coupon_DiscountType) String() string {
	return proto.EnumName(Listing_Coupon_DiscountType_name, int32(x))
}
func (Listing_Coupon_DiscountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 4, 0}
}

type Order_Payment_Method int32

const (
	Order_Payment_ADDRESS_REQUEST Order_Payment_Method = 0
	Order_Payment_DIRECT          Order_Payment_Method = 1
	Order_Payment_MODERATED       Order_Payment_Method = 2
)

var Order_Payment_Method_name = map[int32]string{
	0: "ADDRESS_REQUEST",
	1: "DIRECT",
	2: "MODERATED",
}
var Order_Payment_Method_value = map[string]int32{
	"ADDRESS_REQUEST": 0,
	"DIRECT":          1,
	"MODERATED":       2,
}

func (x Order_Payment_Method) String() string {
	return proto.EnumName(Order_Payment_Method_name, int32(x))
}
func (Order_Payment_Method) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 2, 0} }

type Signatures_Section int32

const (
	Signatures_NA                 Signatures_Section = 0
	Signatures_LISTING            Signatures_Section = 1
	Signatures_ORDER              Signatures_Section = 2
	Signatures_ORDER_ACCEPTANCE   Signatures_Section = 3
	Signatures_ORDER_CONFIRMATION Signatures_Section = 4
	Signatures_RATING             Signatures_Section = 5
	Signatures_DISPUTE            Signatures_Section = 6
	Signatures_DISPUTE_RESOLUTION Signatures_Section = 7
	Signatures_REFUND             Signatures_Section = 8
)

var Signatures_Section_name = map[int32]string{
	0: "NA",
	1: "LISTING",
	2: "ORDER",
	3: "ORDER_ACCEPTANCE",
	4: "ORDER_CONFIRMATION",
	5: "RATING",
	6: "DISPUTE",
	7: "DISPUTE_RESOLUTION",
	8: "REFUND",
}
var Signatures_Section_value = map[string]int32{
	"NA":                 0,
	"LISTING":            1,
	"ORDER":              2,
	"ORDER_ACCEPTANCE":   3,
	"ORDER_CONFIRMATION": 4,
	"RATING":             5,
	"DISPUTE":            6,
	"DISPUTE_RESOLUTION": 7,
	"REFUND":             8,
}

func (x Signatures_Section) String() string {
	return proto.EnumName(Signatures_Section_name, int32(x))
}
func (Signatures_Section) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{10, 0} }

type RicardianContract struct {
	VendorListings          []*Listing         `protobuf:"bytes,1,rep,name=vendorListings" json:"vendorListings,omitempty"`
	BuyerOrder              *Order             `protobuf:"bytes,2,opt,name=buyerOrder" json:"buyerOrder,omitempty"`
	VendorOrderConfirmation *OrderConfirmation `protobuf:"bytes,3,opt,name=vendorOrderConfirmation" json:"vendorOrderConfirmation,omitempty"`
	VendorOrderFulfillment  *OrderFulfillment  `protobuf:"bytes,4,opt,name=vendorOrderFulfillment" json:"vendorOrderFulfillment,omitempty"`
	BuyerRating             *Rating            `protobuf:"bytes,5,opt,name=buyerRating" json:"buyerRating,omitempty"`
	Dispute                 *Dispute           `protobuf:"bytes,6,opt,name=dispute" json:"dispute,omitempty"`
	DisputeResolution       *DisputeResolution `protobuf:"bytes,7,opt,name=disputeResolution" json:"disputeResolution,omitempty"`
	Refund                  *Refund            `protobuf:"bytes,8,opt,name=refund" json:"refund,omitempty"`
	Signatures              []*Signatures      `protobuf:"bytes,9,rep,name=signatures" json:"signatures,omitempty"`
}

func (m *RicardianContract) Reset()                    { *m = RicardianContract{} }
func (m *RicardianContract) String() string            { return proto.CompactTextString(m) }
func (*RicardianContract) ProtoMessage()               {}
func (*RicardianContract) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *RicardianContract) GetVendorListings() []*Listing {
	if m != nil {
		return m.VendorListings
	}
	return nil
}

func (m *RicardianContract) GetBuyerOrder() *Order {
	if m != nil {
		return m.BuyerOrder
	}
	return nil
}

func (m *RicardianContract) GetVendorOrderConfirmation() *OrderConfirmation {
	if m != nil {
		return m.VendorOrderConfirmation
	}
	return nil
}

func (m *RicardianContract) GetVendorOrderFulfillment() *OrderFulfillment {
	if m != nil {
		return m.VendorOrderFulfillment
	}
	return nil
}

func (m *RicardianContract) GetBuyerRating() *Rating {
	if m != nil {
		return m.BuyerRating
	}
	return nil
}

func (m *RicardianContract) GetDispute() *Dispute {
	if m != nil {
		return m.Dispute
	}
	return nil
}

func (m *RicardianContract) GetDisputeResolution() *DisputeResolution {
	if m != nil {
		return m.DisputeResolution
	}
	return nil
}

func (m *RicardianContract) GetRefund() *Refund {
	if m != nil {
		return m.Refund
	}
	return nil
}

func (m *RicardianContract) GetSignatures() []*Signatures {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type Listing struct {
	Slug               string                    `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
	VendorID           *ID                       `protobuf:"bytes,2,opt,name=vendorID" json:"vendorID,omitempty"`
	Metadata           *Listing_Metadata         `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	Item               *Listing_Item             `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
	ShippingOptions    []*Listing_ShippingOption `protobuf:"bytes,5,rep,name=shippingOptions" json:"shippingOptions,omitempty"`
	Taxes              []*Listing_Tax            `protobuf:"bytes,6,rep,name=taxes" json:"taxes,omitempty"`
	Coupons            []*Listing_Coupon         `protobuf:"bytes,7,rep,name=coupons" json:"coupons,omitempty"`
	Moderators         []string                  `protobuf:"bytes,8,rep,name=moderators" json:"moderators,omitempty"`
	TermsAndConditions string                    `protobuf:"bytes,9,opt,name=termsAndConditions" json:"termsAndConditions,omitempty"`
	RefundPolicy       string                    `protobuf:"bytes,10,opt,name=refundPolicy" json:"refundPolicy,omitempty"`
	// Only used by the API when posting a new listing.
	// Shouldn't be included in the seeded listing.
	// Negative implies no inventory tracking.
	Inventory []*Listing_Inventory `protobuf:"bytes,11,rep,name=inventory" json:"inventory,omitempty"`
}

func (m *Listing) Reset()                    { *m = Listing{} }
func (m *Listing) String() string            { return proto.CompactTextString(m) }
func (*Listing) ProtoMessage()               {}
func (*Listing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Listing) GetVendorID() *ID {
	if m != nil {
		return m.VendorID
	}
	return nil
}

func (m *Listing) GetMetadata() *Listing_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Listing) GetItem() *Listing_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Listing) GetShippingOptions() []*Listing_ShippingOption {
	if m != nil {
		return m.ShippingOptions
	}
	return nil
}

func (m *Listing) GetTaxes() []*Listing_Tax {
	if m != nil {
		return m.Taxes
	}
	return nil
}

func (m *Listing) GetCoupons() []*Listing_Coupon {
	if m != nil {
		return m.Coupons
	}
	return nil
}

func (m *Listing) GetInventory() []*Listing_Inventory {
	if m != nil {
		return m.Inventory
	}
	return nil
}

type Listing_Metadata struct {
	Version      uint32                        `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ContractType Listing_Metadata_ContractType `protobuf:"varint,2,opt,name=contractType,enum=Listing_Metadata_ContractType" json:"contractType,omitempty"`
	ListingType  Listing_Metadata_ListingType  `protobuf:"varint,3,opt,name=listingType,enum=Listing_Metadata_ListingType" json:"listingType,omitempty"`
	Expiry       *google_protobuf.Timestamp    `protobuf:"bytes,4,opt,name=expiry" json:"expiry,omitempty"`
}

func (m *Listing_Metadata) Reset()                    { *m = Listing_Metadata{} }
func (m *Listing_Metadata) String() string            { return proto.CompactTextString(m) }
func (*Listing_Metadata) ProtoMessage()               {}
func (*Listing_Metadata) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

func (m *Listing_Metadata) GetExpiry() *google_protobuf.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type Listing_Item struct {
	Title          string                 `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ProcessingTime string                 `protobuf:"bytes,3,opt,name=processingTime" json:"processingTime,omitempty"`
	Price          *Listing_Price         `protobuf:"bytes,4,opt,name=price" json:"price,omitempty"`
	Nsfw           bool                   `protobuf:"varint,5,opt,name=nsfw" json:"nsfw,omitempty"`
	Tags           []string               `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Images         []*Listing_Item_Image  `protobuf:"bytes,7,rep,name=images" json:"images,omitempty"`
	Categories     []string               `protobuf:"bytes,8,rep,name=categories" json:"categories,omitempty"`
	Sku            string                 `protobuf:"bytes,9,opt,name=sku" json:"sku,omitempty"`
	Grams          float32                `protobuf:"fixed32,10,opt,name=grams" json:"grams,omitempty"`
	Condition      string                 `protobuf:"bytes,11,opt,name=condition" json:"condition,omitempty"`
	Options        []*Listing_Item_Option `protobuf:"bytes,12,rep,name=options" json:"options,omitempty"`
}

func (m *Listing_Item) Reset()                    { *m = Listing_Item{} }
func (m *Listing_Item) String() string            { return proto.CompactTextString(m) }
func (*Listing_Item) ProtoMessage()               {}
func (*Listing_Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1} }

func (m *Listing_Item) GetPrice() *Listing_Price {
	if m != nil {
		return m.Price
	}
	return nil
}

func (m *Listing_Item) GetImages() []*Listing_Item_Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Listing_Item) GetOptions() []*Listing_Item_Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Listing_Item_Option struct {
	Name        string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Variants    []*Listing_Item_Option_Variants `protobuf:"bytes,3,rep,name=variants" json:"variants,omitempty"`
}

func (m *Listing_Item_Option) Reset()                    { *m = Listing_Item_Option{} }
func (m *Listing_Item_Option) String() string            { return proto.CompactTextString(m) }
func (*Listing_Item_Option) ProtoMessage()               {}
func (*Listing_Item_Option) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1, 0} }

func (m *Listing_Item_Option) GetVariants() []*Listing_Item_Option_Variants {
	if m != nil {
		return m.Variants
	}
	return nil
}

type Listing_Item_Option_Variants struct {
	Name          string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image         *Listing_Item_Image `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	PriceModifier *Listing_Price      `protobuf:"bytes,3,opt,name=priceModifier" json:"priceModifier,omitempty"`
}

func (m *Listing_Item_Option_Variants) Reset()         { *m = Listing_Item_Option_Variants{} }
func (m *Listing_Item_Option_Variants) String() string { return proto.CompactTextString(m) }
func (*Listing_Item_Option_Variants) ProtoMessage()    {}
func (*Listing_Item_Option_Variants) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 1, 0, 0}
}

func (m *Listing_Item_Option_Variants) GetImage() *Listing_Item_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Listing_Item_Option_Variants) GetPriceModifier() *Listing_Price {
	if m != nil {
		return m.PriceModifier
	}
	return nil
}

type Listing_Item_Image struct {
	Hash     string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
}

func (m *Listing_Item_Image) Reset()                    { *m = Listing_Item_Image{} }
func (m *Listing_Item_Image) String() string            { return proto.CompactTextString(m) }
func (*Listing_Item_Image) ProtoMessage()               {}
func (*Listing_Item_Image) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1, 1} }

type Listing_ShippingOption struct {
	Name         string                               `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type         Listing_ShippingOption_ShippingType  `protobuf:"varint,2,opt,name=type,enum=Listing_ShippingOption_ShippingType" json:"type,omitempty"`
	Regions      []CountryCode                        `protobuf:"varint,3,rep,name=regions,enum=CountryCode" json:"regions,omitempty"`
	ShippingRule *Listing_ShippingOption_ShippingRule `protobuf:"bytes,4,opt,name=shippingRule" json:"shippingRule,omitempty"`
	Services     []*Listing_ShippingOption_Service    `protobuf:"bytes,5,rep,name=services" json:"services,omitempty"`
}

func (m *Listing_ShippingOption) Reset()                    { *m = Listing_ShippingOption{} }
func (m *Listing_ShippingOption) String() string            { return proto.CompactTextString(m) }
func (*Listing_ShippingOption) ProtoMessage()               {}
func (*Listing_ShippingOption) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 2} }

func (m *Listing_ShippingOption) GetShippingRule() *Listing_ShippingOption_ShippingRule {
	if m != nil {
		return m.ShippingRule
	}
	return nil
}

func (m *Listing_ShippingOption) GetServices() []*Listing_ShippingOption_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type Listing_ShippingOption_Service struct {
	Name              string         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Price             *Listing_Price `protobuf:"bytes,2,opt,name=price" json:"price,omitempty"`
	EstimatedDelivery string         `protobuf:"bytes,3,opt,name=estimatedDelivery" json:"estimatedDelivery,omitempty"`
}

func (m *Listing_ShippingOption_Service) Reset()         { *m = Listing_ShippingOption_Service{} }
func (m *Listing_ShippingOption_Service) String() string { return proto.CompactTextString(m) }
func (*Listing_ShippingOption_Service) ProtoMessage()    {}
func (*Listing_ShippingOption_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 0}
}

func (m *Listing_ShippingOption_Service) GetPrice() *Listing_Price {
	if m != nil {
		return m.Price
	}
	return nil
}

type Listing_ShippingOption_ShippingRule struct {
	RuleType     Listing_ShippingOption_ShippingRule_RuleType `protobuf:"varint,1,opt,name=ruleType,enum=Listing_ShippingOption_ShippingRule_RuleType" json:"ruleType,omitempty"`
	MinimumRange uint32                                       `protobuf:"varint,2,opt,name=minimumRange" json:"minimumRange,omitempty"`
	MaxRange     uint32                                       `protobuf:"varint,3,opt,name=maxRange" json:"maxRange,omitempty"`
	Price        *Listing_Price                               `protobuf:"bytes,4,opt,name=price" json:"price,omitempty"`
}

func (m *Listing_ShippingOption_ShippingRule) Reset()         { *m = Listing_ShippingOption_ShippingRule{} }
func (m *Listing_ShippingOption_ShippingRule) String() string { return proto.CompactTextString(m) }
func (*Listing_ShippingOption_ShippingRule) ProtoMessage()    {}
func (*Listing_ShippingOption_ShippingRule) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 1}
}

func (m *Listing_ShippingOption_ShippingRule) GetPrice() *Listing_Price {
	if m != nil {
		return m.Price
	}
	return nil
}

type Listing_Tax struct {
	TaxType     string        `protobuf:"bytes,1,opt,name=taxType" json:"taxType,omitempty"`
	TaxRegions  []CountryCode `protobuf:"varint,2,rep,name=taxRegions,enum=CountryCode" json:"taxRegions,omitempty"`
	TaxShipping bool          `protobuf:"varint,3,opt,name=taxShipping" json:"taxShipping,omitempty"`
	Percentage  float32       `protobuf:"fixed32,4,opt,name=percentage" json:"percentage,omitempty"`
}

func (m *Listing_Tax) Reset()                    { *m = Listing_Tax{} }
func (m *Listing_Tax) String() string            { return proto.CompactTextString(m) }
func (*Listing_Tax) ProtoMessage()               {}
func (*Listing_Tax) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 3} }

type Listing_Coupon struct {
	Title           string                      `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Hash            string                      `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	DiscountType    Listing_Coupon_DiscountType `protobuf:"varint,3,opt,name=discountType,enum=Listing_Coupon_DiscountType" json:"discountType,omitempty"`
	PercentDiscount float32                     `protobuf:"fixed32,4,opt,name=percentDiscount" json:"percentDiscount,omitempty"`
	PriceDiscount   *Listing_Price              `protobuf:"bytes,5,opt,name=priceDiscount" json:"priceDiscount,omitempty"`
}

func (m *Listing_Coupon) Reset()                    { *m = Listing_Coupon{} }
func (m *Listing_Coupon) String() string            { return proto.CompactTextString(m) }
func (*Listing_Coupon) ProtoMessage()               {}
func (*Listing_Coupon) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 4} }

func (m *Listing_Coupon) GetPriceDiscount() *Listing_Price {
	if m != nil {
		return m.PriceDiscount
	}
	return nil
}

type Listing_Price struct {
	CurrencyCode string `protobuf:"bytes,1,opt,name=currencyCode" json:"currencyCode,omitempty"`
	Amount       uint64 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *Listing_Price) Reset()                    { *m = Listing_Price{} }
func (m *Listing_Price) String() string            { return proto.CompactTextString(m) }
func (*Listing_Price) ProtoMessage()               {}
func (*Listing_Price) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 5} }

type Listing_Inventory struct {
	// string format is /slug/variant/variant/...
	Item  string `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *Listing_Inventory) Reset()                    { *m = Listing_Inventory{} }
func (m *Listing_Inventory) String() string            { return proto.CompactTextString(m) }
func (*Listing_Inventory) ProtoMessage()               {}
func (*Listing_Inventory) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 6} }

type Order struct {
	RefundAddress string                     `protobuf:"bytes,1,opt,name=refundAddress" json:"refundAddress,omitempty"`
	Shipping      *Order_Shipping            `protobuf:"bytes,2,opt,name=shipping" json:"shipping,omitempty"`
	BuyerID       *ID                        `protobuf:"bytes,3,opt,name=buyerID" json:"buyerID,omitempty"`
	Timestamp     *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Items         []*Order_Item              `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	Payment       *Order_Payment             `protobuf:"bytes,6,opt,name=payment" json:"payment,omitempty"`
	RatingKey     []byte                     `protobuf:"bytes,7,opt,name=ratingKey,proto3" json:"ratingKey,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Order) GetShipping() *Order_Shipping {
	if m != nil {
		return m.Shipping
	}
	return nil
}

func (m *Order) GetBuyerID() *ID {
	if m != nil {
		return m.BuyerID
	}
	return nil
}

func (m *Order) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Order) GetItems() []*Order_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetPayment() *Order_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

type Order_Shipping struct {
	ShipTo       string      `protobuf:"bytes,1,opt,name=shipTo" json:"shipTo,omitempty"`
	Address      string      `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	City         string      `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	State        string      `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	PostalCode   string      `protobuf:"bytes,5,opt,name=postalCode" json:"postalCode,omitempty"`
	Country      CountryCode `protobuf:"varint,6,opt,name=country,enum=CountryCode" json:"country,omitempty"`
	AddressNotes string      `protobuf:"bytes,7,opt,name=addressNotes" json:"addressNotes,omitempty"`
}

func (m *Order_Shipping) Reset()                    { *m = Order_Shipping{} }
func (m *Order_Shipping) String() string            { return proto.CompactTextString(m) }
func (*Order_Shipping) ProtoMessage()               {}
func (*Order_Shipping) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type Order_Item struct {
	ListingHash    string                     `protobuf:"bytes,1,opt,name=listingHash" json:"listingHash,omitempty"`
	Quantity       uint32                     `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	Options        []*Order_Item_Option       `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
	ShippingOption *Order_Item_ShippingOption `protobuf:"bytes,4,opt,name=shippingOption" json:"shippingOption,omitempty"`
	Memo           string                     `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
}

func (m *Order_Item) Reset()                    { *m = Order_Item{} }
func (m *Order_Item) String() string            { return proto.CompactTextString(m) }
func (*Order_Item) ProtoMessage()               {}
func (*Order_Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1} }

func (m *Order_Item) GetOptions() []*Order_Item_Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Order_Item) GetShippingOption() *Order_Item_ShippingOption {
	if m != nil {
		return m.ShippingOption
	}
	return nil
}

type Order_Item_Option struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Order_Item_Option) Reset()                    { *m = Order_Item_Option{} }
func (m *Order_Item_Option) String() string            { return proto.CompactTextString(m) }
func (*Order_Item_Option) ProtoMessage()               {}
func (*Order_Item_Option) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1, 0} }

type Order_Item_ShippingOption struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Service string `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
}

func (m *Order_Item_ShippingOption) Reset()                    { *m = Order_Item_ShippingOption{} }
func (m *Order_Item_ShippingOption) String() string            { return proto.CompactTextString(m) }
func (*Order_Item_ShippingOption) ProtoMessage()               {}
func (*Order_Item_ShippingOption) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1, 1} }

type Order_Payment struct {
	Method       Order_Payment_Method `protobuf:"varint,1,opt,name=method,enum=Order_Payment_Method" json:"method,omitempty"`
	Moderator    string               `protobuf:"bytes,2,opt,name=moderator" json:"moderator,omitempty"`
	Amount       uint64               `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	Chaincode    string               `protobuf:"bytes,4,opt,name=chaincode" json:"chaincode,omitempty"`
	Address      string               `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	RedeemScript string               `protobuf:"bytes,6,opt,name=redeemScript" json:"redeemScript,omitempty"`
}

func (m *Order_Payment) Reset()                    { *m = Order_Payment{} }
func (m *Order_Payment) String() string            { return proto.CompactTextString(m) }
func (*Order_Payment) ProtoMessage()               {}
func (*Order_Payment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 2} }

type OrderConfirmation struct {
	OrderID         string `protobuf:"bytes,1,opt,name=orderID" json:"orderID,omitempty"`
	OutputScript    []byte `protobuf:"bytes,2,opt,name=outputScript,proto3" json:"outputScript,omitempty"`
	RequestedAmount uint64 `protobuf:"varint,3,opt,name=requestedAmount" json:"requestedAmount,omitempty"`
	RatingSignature []byte `protobuf:"bytes,4,opt,name=ratingSignature,proto3" json:"ratingSignature,omitempty"`
}

func (m *OrderConfirmation) Reset()                    { *m = OrderConfirmation{} }
func (m *OrderConfirmation) String() string            { return proto.CompactTextString(m) }
func (*OrderConfirmation) ProtoMessage()               {}
func (*OrderConfirmation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// TODO: complete other messages
type OrderFulfillment struct {
}

func (m *OrderFulfillment) Reset()                    { *m = OrderFulfillment{} }
func (m *OrderFulfillment) String() string            { return proto.CompactTextString(m) }
func (*OrderFulfillment) ProtoMessage()               {}
func (*OrderFulfillment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type Rating struct {
}

func (m *Rating) Reset()                    { *m = Rating{} }
func (m *Rating) String() string            { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()               {}
func (*Rating) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type Dispute struct {
}

func (m *Dispute) Reset()                    { *m = Dispute{} }
func (m *Dispute) String() string            { return proto.CompactTextString(m) }
func (*Dispute) ProtoMessage()               {}
func (*Dispute) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type DisputeResolution struct {
}

func (m *DisputeResolution) Reset()                    { *m = DisputeResolution{} }
func (m *DisputeResolution) String() string            { return proto.CompactTextString(m) }
func (*DisputeResolution) ProtoMessage()               {}
func (*DisputeResolution) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

type Refund struct {
}

func (m *Refund) Reset()                    { *m = Refund{} }
func (m *Refund) String() string            { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()               {}
func (*Refund) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type ID struct {
	Guid         string      `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	BlockchainID string      `protobuf:"bytes,2,opt,name=blockchainID" json:"blockchainID,omitempty"`
	Pubkeys      *ID_Pubkeys `protobuf:"bytes,3,opt,name=pubkeys" json:"pubkeys,omitempty"`
}

func (m *ID) Reset()                    { *m = ID{} }
func (m *ID) String() string            { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()               {}
func (*ID) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ID) GetPubkeys() *ID_Pubkeys {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

type ID_Pubkeys struct {
	Guid    []byte `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Bitcoin []byte `protobuf:"bytes,2,opt,name=bitcoin,proto3" json:"bitcoin,omitempty"`
}

func (m *ID_Pubkeys) Reset()                    { *m = ID_Pubkeys{} }
func (m *ID_Pubkeys) String() string            { return proto.CompactTextString(m) }
func (*ID_Pubkeys) ProtoMessage()               {}
func (*ID_Pubkeys) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9, 0} }

type Signatures struct {
	Section Signatures_Section `protobuf:"varint,1,opt,name=section,enum=Signatures_Section" json:"section,omitempty"`
	Guid    []byte             `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	Bitcoin []byte             `protobuf:"bytes,3,opt,name=bitcoin,proto3" json:"bitcoin,omitempty"`
}

func (m *Signatures) Reset()                    { *m = Signatures{} }
func (m *Signatures) String() string            { return proto.CompactTextString(m) }
func (*Signatures) ProtoMessage()               {}
func (*Signatures) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func init() {
	proto.RegisterType((*RicardianContract)(nil), "RicardianContract")
	proto.RegisterType((*Listing)(nil), "Listing")
	proto.RegisterType((*Listing_Metadata)(nil), "Listing.Metadata")
	proto.RegisterType((*Listing_Item)(nil), "Listing.Item")
	proto.RegisterType((*Listing_Item_Option)(nil), "Listing.Item.Option")
	proto.RegisterType((*Listing_Item_Option_Variants)(nil), "Listing.Item.Option.Variants")
	proto.RegisterType((*Listing_Item_Image)(nil), "Listing.Item.Image")
	proto.RegisterType((*Listing_ShippingOption)(nil), "Listing.ShippingOption")
	proto.RegisterType((*Listing_ShippingOption_Service)(nil), "Listing.ShippingOption.Service")
	proto.RegisterType((*Listing_ShippingOption_ShippingRule)(nil), "Listing.ShippingOption.ShippingRule")
	proto.RegisterType((*Listing_Tax)(nil), "Listing.Tax")
	proto.RegisterType((*Listing_Coupon)(nil), "Listing.Coupon")
	proto.RegisterType((*Listing_Price)(nil), "Listing.Price")
	proto.RegisterType((*Listing_Inventory)(nil), "Listing.Inventory")
	proto.RegisterType((*Order)(nil), "Order")
	proto.RegisterType((*Order_Shipping)(nil), "Order.Shipping")
	proto.RegisterType((*Order_Item)(nil), "Order.Item")
	proto.RegisterType((*Order_Item_Option)(nil), "Order.Item.Option")
	proto.RegisterType((*Order_Item_ShippingOption)(nil), "Order.Item.ShippingOption")
	proto.RegisterType((*Order_Payment)(nil), "Order.Payment")
	proto.RegisterType((*OrderConfirmation)(nil), "OrderConfirmation")
	proto.RegisterType((*OrderFulfillment)(nil), "OrderFulfillment")
	proto.RegisterType((*Rating)(nil), "Rating")
	proto.RegisterType((*Dispute)(nil), "Dispute")
	proto.RegisterType((*DisputeResolution)(nil), "DisputeResolution")
	proto.RegisterType((*Refund)(nil), "Refund")
	proto.RegisterType((*ID)(nil), "ID")
	proto.RegisterType((*ID_Pubkeys)(nil), "ID.Pubkeys")
	proto.RegisterType((*Signatures)(nil), "Signatures")
	proto.RegisterEnum("Listing_Metadata_ContractType", Listing_Metadata_ContractType_name, Listing_Metadata_ContractType_value)
	proto.RegisterEnum("Listing_Metadata_ListingType", Listing_Metadata_ListingType_name, Listing_Metadata_ListingType_value)
	proto.RegisterEnum("Listing_ShippingOption_ShippingType", Listing_ShippingOption_ShippingType_name, Listing_ShippingOption_ShippingType_value)
	proto.RegisterEnum("Listing_ShippingOption_ShippingRule_RuleType", Listing_ShippingOption_ShippingRule_RuleType_name, Listing_ShippingOption_ShippingRule_RuleType_value)
	proto.RegisterEnum("Listing_Coupon_DiscountType", Listing_Coupon_DiscountType_name, Listing_Coupon_DiscountType_value)
	proto.RegisterEnum("Order_Payment_Method", Order_Payment_Method_name, Order_Payment_Method_value)
	proto.RegisterEnum("Signatures_Section", Signatures_Section_name, Signatures_Section_value)
}

var fileDescriptor1 = []byte{
	// 2145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x58, 0x49, 0x8f, 0x23, 0x59,
	0x11, 0xc6, 0xe9, 0xf2, 0x16, 0x76, 0x6d, 0xaf, 0x37, 0x93, 0x4c, 0x2f, 0x58, 0x0d, 0xea, 0x11,
	0x4c, 0x0e, 0xf4, 0x80, 0x18, 0x84, 0x04, 0xe3, 0xb6, 0x5d, 0x5d, 0xa9, 0xae, 0xb2, 0x3d, 0xcf,
	0xf6, 0x34, 0x73, 0x40, 0xa5, 0xac, 0x74, 0x96, 0x2b, 0xd5, 0x4e, 0xa7, 0x3b, 0x97, 0xa6, 0xeb,
	0x04, 0x07, 0x8e, 0x08, 0x2e, 0x9c, 0x10, 0x57, 0x8e, 0xfc, 0x02, 0x24, 0x7e, 0x04, 0x07, 0xfe,
	0x01, 0x3f, 0x80, 0x2b, 0x27, 0xe2, 0xc5, 0x7b, 0x2f, 0x9d, 0x76, 0xb9, 0x9a, 0x3a, 0x39, 0x63,
	0x79, 0x5b, 0x2c, 0x5f, 0x44, 0x18, 0xf6, 0xdd, 0x70, 0x91, 0x44, 0x8e, 0x9b, 0xc4, 0xd6, 0x32,
	0x0a, 0x93, 0xd0, 0x64, 0x6e, 0x98, 0x22, 0xe7, 0xca, 0x0d, 0xa7, 0x9e, 0xe6, 0x3d, 0x9e, 0x85,
	0xe1, 0x6c, 0xee, 0x7d, 0x4a, 0xd4, 0x79, 0x7a, 0xf1, 0x69, 0xe2, 0x07, 0x5e, 0x9c, 0x38, 0xc1,
	0x52, 0x2a, 0xb4, 0xfe, 0x5d, 0x84, 0x43, 0xee, 0xbb, 0x4e, 0x34, 0xf5, 0x9d, 0x45, 0x47, 0xed,
	0xc8, 0x7e, 0x00, 0x7b, 0xef, 0xbc, 0xc5, 0x34, 0x8c, 0x4e, 0xfc, 0x38, 0xf1, 0x17, 0xb3, 0xb8,
	0x59, 0x78, 0x52, 0x7c, 0x56, 0x7f, 0x5e, 0xb5, 0x14, 0x83, 0x6f, 0xc8, 0xd9, 0x77, 0x01, 0xce,
	0xd3, 0x2b, 0x2f, 0x1a, 0x44, 0x53, 0x2f, 0x6a, 0x1a, 0x4f, 0x0a, 0xa8, 0x5d, 0xb6, 0x88, 0xe2,
	0x39, 0x09, 0x3b, 0x81, 0x07, 0x72, 0x25, 0x91, 0x78, 0xe0, 0x85, 0x1f, 0x05, 0x4e, 0xe2, 0x87,
	0x8b, 0x66, 0x91, 0x16, 0x31, 0xeb, 0x9a, 0x84, 0xdf, 0xb4, 0x84, 0xd9, 0x70, 0x3f, 0x27, 0x3a,
	0x4a, 0xe7, 0x17, 0xfe, 0x7c, 0x1e, 0x78, 0x8b, 0xa4, 0xb9, 0x43, 0x9b, 0x1d, 0x5a, 0x9b, 0x02,
	0x7e, 0xc3, 0x02, 0xf6, 0x31, 0xd4, 0xe9, 0x9a, 0xdc, 0x11, 0x0f, 0x6a, 0x96, 0x68, 0x7d, 0xc5,
	0x92, 0x24, 0xcf, 0xcb, 0x58, 0x0b, 0x2a, 0x53, 0x3f, 0x5e, 0xa6, 0x89, 0xd7, 0x2c, 0x93, 0x5a,
	0xd5, 0xea, 0x4a, 0x9a, 0x6b, 0x01, 0xfb, 0x02, 0x0e, 0xd5, 0x27, 0xf7, 0xe2, 0x70, 0x9e, 0xd2,
	0x0b, 0x2b, 0xea, 0x85, 0xdd, 0x4d, 0x09, 0xbf, 0xae, 0xcc, 0x1e, 0x43, 0x39, 0xf2, 0x2e, 0xd2,
	0xc5, 0xb4, 0x59, 0xd5, 0x77, 0x21, 0x92, 0x2b, 0x36, 0xfb, 0x1e, 0x40, 0xec, 0xcf, 0x16, 0x4e,
	0x92, 0x46, 0x5e, 0xdc, 0xac, 0x91, 0x83, 0xea, 0xd6, 0x28, 0x63, 0xf1, 0x9c, 0xb8, 0xf5, 0xe7,
	0xfb, 0x50, 0x51, 0xce, 0x62, 0x0c, 0x76, 0xe2, 0x79, 0x3a, 0x43, 0x9f, 0x16, 0x9e, 0xd5, 0x38,
	0x7d, 0xe3, 0x69, 0x55, 0x69, 0x18, 0xbb, 0xab, 0xbc, 0x57, 0xb4, 0xec, 0x2e, 0xcf, 0x98, 0xec,
	0x13, 0xa8, 0x06, 0x5e, 0xe2, 0x4c, 0x9d, 0xc4, 0x51, 0x9e, 0x3a, 0xd4, 0xc1, 0x60, 0x9d, 0x2a,
	0x01, 0xcf, 0x54, 0xd8, 0xb7, 0x61, 0xc7, 0x4f, 0xbc, 0x40, 0xf9, 0x61, 0x37, 0x53, 0xb5, 0x91,
	0xc9, 0x49, 0xc4, 0xda, 0xb0, 0x1f, 0x5f, 0xfa, 0xcb, 0x25, 0xb2, 0x07, 0x4b, 0xf1, 0xe4, 0x18,
	0xad, 0x2e, 0x1e, 0xf1, 0x20, 0xd3, 0x1e, 0xad, 0xc9, 0xf9, 0xa6, 0x3e, 0x7a, 0xa2, 0x94, 0x38,
	0xef, 0xf1, 0xf5, 0x65, 0x5a, 0xd8, 0xc8, 0x16, 0x8e, 0x9d, 0xf7, 0x5c, 0x8a, 0xd0, 0xb1, 0x15,
	0x4c, 0x8c, 0xa5, 0xd8, 0xbe, 0x42, 0x5a, 0xfb, 0x99, 0x56, 0x87, 0xf8, 0x5c, 0xcb, 0xd9, 0x23,
	0x80, 0x00, 0x93, 0x27, 0x72, 0x92, 0x30, 0x8a, 0xd1, 0xec, 0x45, 0x34, 0x4f, 0x8e, 0xc3, 0x2c,
	0x60, 0x89, 0x17, 0x05, 0x71, 0x7b, 0x31, 0xc5, 0x30, 0x9c, 0xfa, 0xf2, 0xd2, 0x35, 0x32, 0xe3,
	0x16, 0x09, 0x5e, 0xaf, 0x21, 0x7d, 0x35, 0x0c, 0xe7, 0xbe, 0x7b, 0xd5, 0x04, 0xd2, 0x5c, 0xe3,
	0x61, 0xaa, 0xd5, 0xfc, 0x05, 0x5a, 0x19, 0x0f, 0xb8, 0x6a, 0xd6, 0xe9, 0x82, 0x6c, 0x65, 0x2d,
	0x2d, 0xe1, 0x2b, 0x25, 0xf3, 0x3f, 0x06, 0x54, 0xb5, 0xc5, 0x59, 0x13, 0x2a, 0xef, 0xbc, 0x28,
	0x16, 0xd1, 0x25, 0xdc, 0xb9, 0xcb, 0x35, 0xc9, 0x5e, 0x40, 0x43, 0x23, 0xc4, 0xf8, 0x6a, 0xe9,
	0x91, 0x57, 0xf7, 0x9e, 0x3f, 0xba, 0xe6, 0x34, 0xab, 0x93, 0xd3, 0xe2, 0x6b, 0x6b, 0xd8, 0x2f,
	0xa0, 0x3e, 0x97, 0xea, 0xb4, 0x45, 0x91, 0xb6, 0x78, 0x78, 0x7d, 0x8b, 0x93, 0x95, 0x12, 0xcf,
	0xaf, 0x60, 0xcf, 0xa1, 0xec, 0xbd, 0x5f, 0xfa, 0xf8, 0x34, 0x19, 0x08, 0xa6, 0x25, 0x01, 0xc9,
	0xd2, 0x80, 0x64, 0x8d, 0x35, 0x20, 0x71, 0xa5, 0xd9, 0xfa, 0x15, 0x34, 0xf2, 0x57, 0x62, 0x75,
	0xa8, 0x4c, 0xfa, 0xaf, 0xfa, 0x83, 0xd7, 0xfd, 0x83, 0x6f, 0xb0, 0x43, 0xd8, 0x1d, 0x1e, 0x7f,
	0x3d, 0xb2, 0x3b, 0xed, 0x93, 0xb3, 0x97, 0x83, 0x41, 0xf7, 0xa0, 0xc0, 0x0e, 0xa0, 0xd1, 0xb5,
	0x5f, 0xda, 0x63, 0xcd, 0x31, 0xc4, 0x8a, 0x51, 0x8f, 0x7f, 0x65, 0x77, 0x7a, 0x07, 0x45, 0xb6,
	0x07, 0xd0, 0xe1, 0x83, 0xd7, 0xdd, 0xb3, 0xa3, 0x49, 0xbf, 0x7b, 0xb0, 0xd3, 0xfa, 0x0c, 0xea,
	0xb9, 0xeb, 0xb2, 0x32, 0x18, 0xfd, 0x36, 0x6e, 0xbc, 0x0f, 0xf5, 0x23, 0xfb, 0x97, 0xbd, 0xee,
	0xd9, 0x90, 0x8b, 0x75, 0x05, 0xb1, 0x49, 0x7b, 0xd2, 0x19, 0xdb, 0x83, 0xfe, 0x81, 0x61, 0xfe,
	0xad, 0x04, 0x3b, 0x22, 0x74, 0xd9, 0x5d, 0x8c, 0x38, 0x3f, 0x99, 0x7b, 0x2a, 0x79, 0x24, 0xc1,
	0x9e, 0x40, 0x1d, 0x31, 0xd7, 0x8d, 0x7c, 0x8a, 0x4b, 0x32, 0x75, 0x8d, 0xe7, 0x59, 0x88, 0x8f,
	0x7b, 0xf8, 0x64, 0xd7, 0x8b, 0x63, 0x71, 0x30, 0xbe, 0x99, 0x8c, 0x59, 0xe3, 0x1b, 0x5c, 0xf6,
	0x14, 0x4a, 0xcb, 0xc8, 0x77, 0x3d, 0x65, 0xaf, 0xbd, 0xcc, 0xd6, 0x43, 0xc1, 0xe5, 0x52, 0x28,
	0x32, 0x78, 0x11, 0x5f, 0xfc, 0x9a, 0x50, 0xaa, 0xca, 0xe9, 0x5b, 0xf0, 0x12, 0x67, 0x26, 0x53,
	0x01, 0xb3, 0x5a, 0x7c, 0x23, 0x44, 0x94, 0xfd, 0xc0, 0x99, 0x79, 0x3a, 0xf4, 0xef, 0xac, 0xe5,
	0xa1, 0x65, 0x0b, 0x19, 0x57, 0x2a, 0x22, 0xfa, 0x5d, 0x27, 0xf1, 0x66, 0x61, 0xe4, 0x7b, 0x59,
	0xf4, 0xaf, 0x38, 0x68, 0xe7, 0x62, 0xfc, 0x26, 0x55, 0xe1, 0x2e, 0x3e, 0x85, 0x31, 0x66, 0x91,
	0x13, 0xc4, 0x14, 0xd8, 0x06, 0x97, 0x04, 0xfb, 0x08, 0x6a, 0xae, 0xce, 0x01, 0x8c, 0x68, 0xa1,
	0xbd, 0x62, 0x60, 0x0e, 0x55, 0x42, 0x95, 0xed, 0x0d, 0xba, 0xd3, 0xdd, 0xf5, 0x3b, 0xa9, 0x54,
	0xd7, 0x4a, 0xe6, 0x7f, 0x0b, 0x50, 0x96, 0x3c, 0x7a, 0xb5, 0x13, 0x68, 0xd3, 0xd3, 0xf7, 0x2d,
	0x2c, 0xff, 0x53, 0x44, 0x36, 0x27, 0xc2, 0xea, 0x96, 0xc4, 0x68, 0x73, 0x71, 0xe2, 0xc3, 0x6d,
	0x27, 0x5a, 0x5f, 0x29, 0x25, 0x9e, 0xa9, 0x9b, 0xbf, 0x81, 0xaa, 0xe6, 0x6e, 0x3d, 0xfc, 0x63,
	0x28, 0x91, 0xed, 0x14, 0x62, 0x6e, 0xb5, 0xae, 0xd4, 0x60, 0x3f, 0x82, 0x5d, 0x72, 0xdd, 0x69,
	0x38, 0xf5, 0x2f, 0x7c, 0x2c, 0x91, 0xc5, 0xad, 0xfe, 0x5d, 0x57, 0x32, 0x7f, 0x02, 0x25, 0xda,
	0x45, 0x9c, 0x7e, 0xe9, 0xc4, 0x97, 0xfa, 0x74, 0xf1, 0xcd, 0x4c, 0xa8, 0x62, 0xf5, 0xf2, 0xfa,
	0xe2, 0x56, 0xf2, 0xdd, 0x19, 0x6d, 0xfe, 0xbe, 0x0c, 0x7b, 0xeb, 0xe0, 0xb9, 0xf5, 0x01, 0x9f,
	0x63, 0xcc, 0xac, 0xb0, 0xe1, 0xe9, 0x0d, 0xb8, 0x9b, 0x91, 0x94, 0xdf, 0xb4, 0x02, 0xe3, 0xb9,
	0x12, 0x79, 0x33, 0x72, 0xa3, 0x30, 0xea, 0x1e, 0x62, 0x6f, 0x47, 0xb6, 0x1f, 0x1d, 0xc4, 0x4b,
	0xae, 0x85, 0xec, 0x18, 0x1a, 0x1a, 0xb4, 0x79, 0x3a, 0xd7, 0x61, 0xfd, 0x7f, 0x4f, 0x12, 0xba,
	0x7c, 0x6d, 0x25, 0xfb, 0x19, 0x54, 0x63, 0x2f, 0x7a, 0x87, 0xe6, 0xd1, 0x75, 0xe2, 0xf1, 0x8d,
	0xbb, 0x48, 0x3d, 0x9e, 0x2d, 0x30, 0xdf, 0x22, 0x22, 0xc8, 0xef, 0xad, 0x76, 0xc8, 0xb2, 0xce,
	0xf8, 0x50, 0xd6, 0x7d, 0x1f, 0x0e, 0x11, 0xaa, 0xd0, 0x9f, 0x89, 0x37, 0xed, 0x7a, 0x73, 0x1f,
	0x91, 0xf6, 0x4a, 0xa5, 0xf1, 0x75, 0x81, 0xf9, 0x2f, 0x03, 0x1a, 0xf9, 0xe7, 0x60, 0xb3, 0x52,
	0x8d, 0xf0, 0x97, 0x90, 0xb4, 0x40, 0x06, 0xff, 0xe4, 0x36, 0x66, 0xb0, 0xb8, 0x5a, 0xc4, 0xb3,
	0xe5, 0xa2, 0xb0, 0x04, 0xfe, 0xc2, 0x0f, 0xd2, 0x80, 0x3b, 0x0b, 0x15, 0x7f, 0xbb, 0x7c, 0x8d,
	0x27, 0xc2, 0x23, 0xc0, 0x2a, 0x48, 0xf2, 0x22, 0xc9, 0x33, 0xfa, 0x76, 0x28, 0xd3, 0xfa, 0x53,
	0x01, 0xaa, 0xfa, 0x70, 0x76, 0x0f, 0x0e, 0xbf, 0x9c, 0xb4, 0xfb, 0x63, 0x7b, 0xfc, 0xf5, 0x59,
	0xd7, 0x1e, 0x75, 0x06, 0x93, 0xfe, 0x18, 0x61, 0xf3, 0x5b, 0xf0, 0xe0, 0xe8, 0xa4, 0x3d, 0x3e,
	0x3b, 0xea, 0xf5, 0xce, 0x32, 0x39, 0x6f, 0xf7, 0x5f, 0x0a, 0x08, 0xfd, 0x26, 0xdc, 0xcb, 0x84,
	0xaf, 0x7b, 0xf6, 0xcb, 0xe3, 0xb1, 0x12, 0x19, 0x42, 0xd4, 0x19, 0x9c, 0xbe, 0xb0, 0xfb, 0x88,
	0xb8, 0xa3, 0x63, 0x7b, 0x38, 0xb4, 0xfb, 0x2f, 0xcf, 0xda, 0xdd, 0x2e, 0x02, 0xf6, 0x23, 0x30,
	0xaf, 0x8b, 0x46, 0x93, 0x17, 0x63, 0xde, 0xee, 0x8c, 0x11, 0xc0, 0x7f, 0xb8, 0xb2, 0x2b, 0xdd,
	0x0c, 0xf1, 0xff, 0x64, 0x20, 0xea, 0xc1, 0xd0, 0xee, 0xbc, 0x9a, 0x0c, 0xb7, 0x60, 0xb9, 0xf9,
	0xc7, 0x02, 0x14, 0xb1, 0x25, 0x10, 0xd5, 0x12, 0x9b, 0x82, 0xcc, 0x03, 0x35, 0xae, 0x49, 0xf4,
	0x2d, 0xe0, 0x27, 0x57, 0x21, 0x6d, 0x6c, 0x09, 0xe9, 0x9c, 0x5c, 0xa0, 0x0e, 0x52, 0xfa, 0x16,
	0x64, 0xde, 0x2a, 0xcf, 0xb3, 0x04, 0x98, 0x2e, 0xbd, 0xc8, 0xc5, 0x92, 0x2d, 0xf0, 0x61, 0x87,
	0xf0, 0x31, 0xc7, 0x31, 0xff, 0x60, 0x40, 0x59, 0xb6, 0x1f, 0x37, 0x94, 0x14, 0x9d, 0xf1, 0x46,
	0x2e, 0xe3, 0xbf, 0x80, 0x06, 0xf6, 0x89, 0xd4, 0xe6, 0xe7, 0xea, 0xf1, 0x47, 0x1b, 0xfd, 0x8c,
	0x68, 0x2f, 0x33, 0x1d, 0xbe, 0xb6, 0x82, 0x3d, 0x83, 0x7d, 0x75, 0x09, 0xad, 0xa4, 0xee, 0xb6,
	0xc9, 0xce, 0x00, 0x2b, 0xd3, 0x2b, 0x7d, 0x00, 0xb0, 0xb4, 0x52, 0xeb, 0x73, 0xac, 0xc5, 0xf9,
	0xf3, 0x74, 0x75, 0xc5, 0x22, 0x3c, 0xec, 0xf1, 0x4e, 0xaf, 0x3f, 0x6e, 0x53, 0x64, 0xa0, 0xcf,
	0xa4, 0x87, 0xda, 0xa7, 0x14, 0x48, 0x86, 0xd9, 0x81, 0x12, 0xed, 0x28, 0x62, 0xdb, 0x4d, 0xa3,
	0xc8, 0x5b, 0xb8, 0x64, 0x77, 0x65, 0x95, 0x35, 0x1e, 0xbb, 0x0f, 0x65, 0x27, 0xa0, 0x5b, 0x09,
	0xf3, 0xec, 0x70, 0x45, 0x99, 0x3f, 0x86, 0x5a, 0xd6, 0x32, 0x09, 0x0b, 0x52, 0x0b, 0xaa, 0x12,
	0xdd, 0x57, 0xe5, 0xdb, 0xcd, 0xd6, 0x15, 0xb9, 0x24, 0x5a, 0x7f, 0xaf, 0x42, 0x49, 0x8e, 0x27,
	0x4f, 0x61, 0x57, 0x76, 0x67, 0xed, 0xe9, 0x14, 0xdb, 0xe6, 0x58, 0x2d, 0x5e, 0x67, 0x62, 0x59,
	0xad, 0x6a, 0x68, 0x52, 0x88, 0xb1, 0x2f, 0x07, 0x8d, 0x55, 0xe2, 0x66, 0x0a, 0xec, 0x21, 0x54,
	0x68, 0x78, 0xc0, 0xc6, 0xba, 0xb8, 0x6a, 0xac, 0x35, 0x0f, 0x21, 0xb8, 0x96, 0xcd, 0x64, 0xb7,
	0x68, 0x92, 0x56, 0xca, 0xd8, 0x62, 0x97, 0xc4, 0x9b, 0x34, 0x1a, 0xd6, 0xd5, 0x15, 0xa8, 0xc3,
	0x96, 0x12, 0x74, 0x77, 0x65, 0xe9, 0x5c, 0xd1, 0x40, 0x54, 0x56, 0xee, 0x93, 0x4a, 0x43, 0xc9,
	0xe5, 0x5a, 0x2c, 0x8a, 0x76, 0x44, 0xd3, 0xcd, 0x2b, 0xef, 0x8a, 0xe6, 0x94, 0x06, 0x5f, 0x31,
	0xcc, 0x7f, 0x22, 0x12, 0x64, 0xa1, 0x8d, 0xc6, 0x17, 0x8f, 0x1b, 0x87, 0xca, 0x38, 0x8a, 0x12,
	0xc9, 0xe5, 0x28, 0xab, 0xc9, 0xa0, 0xd5, 0xa4, 0xf0, 0x84, 0xeb, 0x27, 0x1a, 0x2b, 0xe9, 0x5b,
	0x78, 0x02, 0x9f, 0x91, 0xc8, 0xdc, 0xc0, 0xa8, 0x27, 0x82, 0xd2, 0x26, 0xc4, 0xcf, 0x39, 0xb9,
	0xbe, 0x44, 0xa2, 0x1c, 0x47, 0x94, 0x1d, 0x35, 0xe5, 0xd2, 0x83, 0xae, 0x95, 0x1d, 0x25, 0x14,
	0x41, 0xa4, 0x0e, 0xef, 0x87, 0x09, 0xb5, 0x3f, 0x14, 0x44, 0x79, 0x9e, 0xf9, 0x0f, 0x43, 0xf5,
	0x74, 0x4f, 0xb2, 0x2e, 0xf7, 0x78, 0x55, 0x63, 0xf3, 0x2c, 0x81, 0xa5, 0x6f, 0x53, 0x6c, 0x03,
	0xc4, 0x23, 0x24, 0xd6, 0x66, 0x34, 0x22, 0x47, 0xd6, 0xd0, 0x14, 0x55, 0xfb, 0xbe, 0x72, 0xc4,
	0x66, 0x3b, 0x83, 0x5d, 0xf9, 0xde, 0xfa, 0x10, 0x93, 0xf9, 0x3c, 0xb7, 0x68, 0x63, 0xec, 0xd9,
	0x58, 0x21, 0xcc, 0x19, 0x78, 0x41, 0xa8, 0xcc, 0x43, 0xdf, 0xe6, 0xf3, 0x0f, 0x76, 0x49, 0x68,
	0xec, 0x77, 0xce, 0x3c, 0xd5, 0x7d, 0x82, 0x24, 0xcc, 0x9f, 0xdf, 0xaa, 0x47, 0x40, 0xb7, 0xaa,
	0x32, 0xaa, 0xdd, 0xaa, 0x48, 0xf3, 0x77, 0x06, 0x54, 0x54, 0x20, 0xe1, 0x78, 0x58, 0xc6, 0xd9,
	0xef, 0x32, 0x9c, 0xaa, 0xd2, 0x76, 0x6f, 0x3d, 0xd0, 0xc4, 0xa8, 0x80, 0x42, 0xae, 0x94, 0x44,
	0xb8, 0x65, 0x73, 0x95, 0xda, 0x76, 0xc5, 0xc8, 0xa5, 0x77, 0x31, 0x9f, 0xde, 0xd4, 0x59, 0x5e,
	0x3a, 0xfe, 0x42, 0xfc, 0xc3, 0xa1, 0xe2, 0x66, 0xc5, 0xc8, 0xc7, 0x5f, 0x69, 0x3d, 0xfe, 0x68,
	0x0e, 0x9b, 0x7a, 0x5e, 0x30, 0xa2, 0xae, 0x90, 0x42, 0x87, 0xe6, 0xb0, 0x15, 0x0f, 0x91, 0xab,
	0x2c, 0xef, 0xc8, 0xee, 0xc0, 0x3e, 0x16, 0x22, 0xde, 0x1b, 0x8d, 0xce, 0x78, 0xef, 0xcb, 0x49,
	0x6f, 0x24, 0xea, 0x1c, 0x40, 0xb9, 0x6b, 0xf3, 0x1e, 0x16, 0xa0, 0x02, 0xdb, 0x85, 0xda, 0xe9,
	0xa0, 0xdb, 0xe3, 0xed, 0x71, 0x0f, 0xa7, 0x8d, 0xd6, 0x5f, 0x0b, 0x70, 0x78, 0xfd, 0xaf, 0x09,
	0xbc, 0x4d, 0x28, 0x98, 0x98, 0xf6, 0xaa, 0xd4, 0x28, 0x52, 0xdc, 0x26, 0x4c, 0x13, 0x9c, 0xf6,
	0xd5, 0x6d, 0x0c, 0xca, 0xb6, 0x35, 0x9e, 0xc0, 0xe9, 0xc8, 0x7b, 0x9b, 0x62, 0xa6, 0x7b, 0xd3,
	0x76, 0xde, 0x14, 0x9b, 0x6c, 0xd2, 0xa4, 0x3c, 0xcd, 0x06, 0x7f, 0xb2, 0x4c, 0x83, 0x6f, 0xb2,
	0x5b, 0x0c, 0x0e, 0x36, 0xff, 0xf5, 0x68, 0x55, 0xa1, 0x2c, 0xff, 0xd4, 0x68, 0xd5, 0xa0, 0xa2,
	0xfe, 0x96, 0x68, 0xdd, 0x81, 0xc3, 0x6b, 0xff, 0x50, 0x90, 0x26, 0x81, 0x60, 0xeb, 0x2f, 0x05,
	0x30, 0xf0, 0x19, 0x18, 0x2b, 0xb3, 0xd4, 0x9f, 0xea, 0x58, 0x11, 0xdf, 0xe2, 0x69, 0xe7, 0xf3,
	0xd0, 0x7d, 0x43, 0x4e, 0x51, 0xff, 0x24, 0xa0, 0xa1, 0xf3, 0x3c, 0xf6, 0x1d, 0xc4, 0xa4, 0xf4,
	0xfc, 0x8d, 0x77, 0x15, 0x2b, 0x3c, 0xac, 0x23, 0x1e, 0x5a, 0x43, 0xc9, 0xe2, 0x5a, 0x86, 0xad,
	0x6f, 0x45, 0xf1, 0xd6, 0x4e, 0x6a, 0xa8, 0x93, 0xd0, 0xbc, 0xe7, 0x7e, 0xe2, 0x86, 0xfe, 0x42,
	0xd9, 0x4f, 0x93, 0xad, 0xdf, 0x1a, 0x00, 0xab, 0x3f, 0x41, 0x30, 0x30, 0x31, 0x5e, 0xdd, 0x44,
	0x0f, 0xc8, 0x7b, 0xd8, 0xa5, 0xaf, 0xa4, 0xd8, 0x29, 0xba, 0x32, 0x3f, 0x95, 0x4e, 0x76, 0x96,
	0xb1, 0xfd, 0xac, 0xe2, 0xfa, 0x59, 0xd8, 0x21, 0x55, 0xd4, 0x16, 0x59, 0xa9, 0xc3, 0xb9, 0xf1,
	0xc4, 0x1e, 0x8d, 0xb1, 0x69, 0xc1, 0x50, 0xa9, 0x61, 0x61, 0xe1, 0x18, 0x2a, 0xd8, 0xf1, 0xdc,
	0x45, 0xf3, 0x8b, 0xcf, 0xb3, 0x76, 0xa7, 0xd3, 0x1b, 0x8e, 0xdb, 0x7d, 0x9a, 0x4e, 0xef, 0x03,
	0x93, 0xdc, 0xce, 0xa0, 0x7f, 0x64, 0xf3, 0xd3, 0x36, 0x0d, 0x9c, 0x3b, 0x22, 0xde, 0x30, 0xbe,
	0xc4, 0x26, 0x25, 0xb1, 0x23, 0x76, 0x5c, 0xc3, 0xc9, 0xb8, 0x77, 0x50, 0x16, 0x0b, 0x14, 0x81,
	0xd1, 0x39, 0x1a, 0x9c, 0x4c, 0x68, 0x41, 0x85, 0x16, 0xf4, 0x68, 0xc4, 0xad, 0x9e, 0x97, 0xa9,
	0x70, 0x7c, 0xf6, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x2c, 0xa8, 0xa0, 0x23, 0x14, 0x00,
	0x00,
}
