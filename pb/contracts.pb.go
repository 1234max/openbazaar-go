// Code generated by protoc-gen-go.
// source: contracts.proto
// DO NOT EDIT!

/*
Package contracts is a generated protocol buffer package.

It is generated from these files:
	contracts.proto

It has these top-level messages:
	RicardianContract
	Listing
	Order
	OrderConfirmation
	OrderReject
	BitcoinSignature
	OrderFulfillment
	Rating
	Dispute
	DisputeResolution
	Refund
	ID
	Signatures
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Listing_Metadata_ContractType int32

const (
	Listing_Metadata_UNKNOWN       Listing_Metadata_ContractType = 0
	Listing_Metadata_PHYSICAL_GOOD Listing_Metadata_ContractType = 1
	Listing_Metadata_DIGITAL_GOOD  Listing_Metadata_ContractType = 2
	Listing_Metadata_SERVICE       Listing_Metadata_ContractType = 3
	Listing_Metadata_CROWD_FUND    Listing_Metadata_ContractType = 4
)

var Listing_Metadata_ContractType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PHYSICAL_GOOD",
	2: "DIGITAL_GOOD",
	3: "SERVICE",
	4: "CROWD_FUND",
}
var Listing_Metadata_ContractType_value = map[string]int32{
	"UNKNOWN":       0,
	"PHYSICAL_GOOD": 1,
	"DIGITAL_GOOD":  2,
	"SERVICE":       3,
	"CROWD_FUND":    4,
}

func (x Listing_Metadata_ContractType) String() string {
	return proto.EnumName(Listing_Metadata_ContractType_name, int32(x))
}
func (Listing_Metadata_ContractType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 0, 0}
}

type Listing_Metadata_Format int32

const (
	Listing_Metadata_NA          Listing_Metadata_Format = 0
	Listing_Metadata_FIXED_PRICE Listing_Metadata_Format = 1
	Listing_Metadata_AUCTION     Listing_Metadata_Format = 2
)

var Listing_Metadata_Format_name = map[int32]string{
	0: "NA",
	1: "FIXED_PRICE",
	2: "AUCTION",
}
var Listing_Metadata_Format_value = map[string]int32{
	"NA":          0,
	"FIXED_PRICE": 1,
	"AUCTION":     2,
}

func (x Listing_Metadata_Format) String() string {
	return proto.EnumName(Listing_Metadata_Format_name, int32(x))
}
func (Listing_Metadata_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 0, 1}
}

type Listing_ShippingOption_ShippingType int32

const (
	Listing_ShippingOption_LOCAL_PICKUP Listing_ShippingOption_ShippingType = 0
	Listing_ShippingOption_FIXED_PRICE  Listing_ShippingOption_ShippingType = 1
)

var Listing_ShippingOption_ShippingType_name = map[int32]string{
	0: "LOCAL_PICKUP",
	1: "FIXED_PRICE",
}
var Listing_ShippingOption_ShippingType_value = map[string]int32{
	"LOCAL_PICKUP": 0,
	"FIXED_PRICE":  1,
}

func (x Listing_ShippingOption_ShippingType) String() string {
	return proto.EnumName(Listing_ShippingOption_ShippingType_name, int32(x))
}
func (Listing_ShippingOption_ShippingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 0}
}

type Listing_ShippingOption_ShippingRules_RuleType int32

const (
	Listing_ShippingOption_ShippingRules_QUANTITY_DISCOUNT          Listing_ShippingOption_ShippingRules_RuleType = 0
	Listing_ShippingOption_ShippingRules_FLAT_FEE_QUANTITY_RANGE    Listing_ShippingOption_ShippingRules_RuleType = 1
	Listing_ShippingOption_ShippingRules_FLAT_FEE_WEIGHT_RANGE      Listing_ShippingOption_ShippingRules_RuleType = 2
	Listing_ShippingOption_ShippingRules_COMBINED_SHIPPING_ADD      Listing_ShippingOption_ShippingRules_RuleType = 3
	Listing_ShippingOption_ShippingRules_COMBINED_SHIPPING_SUBTRACT Listing_ShippingOption_ShippingRules_RuleType = 4
)

var Listing_ShippingOption_ShippingRules_RuleType_name = map[int32]string{
	0: "QUANTITY_DISCOUNT",
	1: "FLAT_FEE_QUANTITY_RANGE",
	2: "FLAT_FEE_WEIGHT_RANGE",
	3: "COMBINED_SHIPPING_ADD",
	4: "COMBINED_SHIPPING_SUBTRACT",
}
var Listing_ShippingOption_ShippingRules_RuleType_value = map[string]int32{
	"QUANTITY_DISCOUNT":          0,
	"FLAT_FEE_QUANTITY_RANGE":    1,
	"FLAT_FEE_WEIGHT_RANGE":      2,
	"COMBINED_SHIPPING_ADD":      3,
	"COMBINED_SHIPPING_SUBTRACT": 4,
}

func (x Listing_ShippingOption_ShippingRules_RuleType) String() string {
	return proto.EnumName(Listing_ShippingOption_ShippingRules_RuleType_name, int32(x))
}
func (Listing_ShippingOption_ShippingRules_RuleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 1, 0}
}

type Order_Payment_Method int32

const (
	Order_Payment_ADDRESS_REQUEST Order_Payment_Method = 0
	Order_Payment_DIRECT          Order_Payment_Method = 1
	Order_Payment_MODERATED       Order_Payment_Method = 2
)

var Order_Payment_Method_name = map[int32]string{
	0: "ADDRESS_REQUEST",
	1: "DIRECT",
	2: "MODERATED",
}
var Order_Payment_Method_value = map[string]int32{
	"ADDRESS_REQUEST": 0,
	"DIRECT":          1,
	"MODERATED":       2,
}

func (x Order_Payment_Method) String() string {
	return proto.EnumName(Order_Payment_Method_name, int32(x))
}
func (Order_Payment_Method) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 2, 0} }

type Signatures_Section int32

const (
	Signatures_NA                 Signatures_Section = 0
	Signatures_LISTING            Signatures_Section = 1
	Signatures_ORDER              Signatures_Section = 2
	Signatures_ORDER_ACCEPTANCE   Signatures_Section = 3
	Signatures_ORDER_CONFIRMATION Signatures_Section = 4
	Signatures_RATING             Signatures_Section = 5
	Signatures_DISPUTE            Signatures_Section = 6
	Signatures_DISPUTE_RESOLUTION Signatures_Section = 7
	Signatures_REFUND             Signatures_Section = 8
)

var Signatures_Section_name = map[int32]string{
	0: "NA",
	1: "LISTING",
	2: "ORDER",
	3: "ORDER_ACCEPTANCE",
	4: "ORDER_CONFIRMATION",
	5: "RATING",
	6: "DISPUTE",
	7: "DISPUTE_RESOLUTION",
	8: "REFUND",
}
var Signatures_Section_value = map[string]int32{
	"NA":                 0,
	"LISTING":            1,
	"ORDER":              2,
	"ORDER_ACCEPTANCE":   3,
	"ORDER_CONFIRMATION": 4,
	"RATING":             5,
	"DISPUTE":            6,
	"DISPUTE_RESOLUTION": 7,
	"REFUND":             8,
}

func (x Signatures_Section) String() string {
	return proto.EnumName(Signatures_Section_name, int32(x))
}
func (Signatures_Section) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{12, 0} }

type RicardianContract struct {
	VendorListings          []*Listing         `protobuf:"bytes,1,rep,name=vendorListings" json:"vendorListings,omitempty"`
	BuyerOrder              *Order             `protobuf:"bytes,2,opt,name=buyerOrder" json:"buyerOrder,omitempty"`
	VendorOrderConfirmation *OrderConfirmation `protobuf:"bytes,3,opt,name=vendorOrderConfirmation" json:"vendorOrderConfirmation,omitempty"`
	VendorOrderFulfillment  *OrderFulfillment  `protobuf:"bytes,4,opt,name=vendorOrderFulfillment" json:"vendorOrderFulfillment,omitempty"`
	BuyerRating             *Rating            `protobuf:"bytes,5,opt,name=buyerRating" json:"buyerRating,omitempty"`
	Dispute                 *Dispute           `protobuf:"bytes,6,opt,name=dispute" json:"dispute,omitempty"`
	DisputeResolution       *DisputeResolution `protobuf:"bytes,7,opt,name=disputeResolution" json:"disputeResolution,omitempty"`
	Refund                  *Refund            `protobuf:"bytes,8,opt,name=refund" json:"refund,omitempty"`
	Signatures              []*Signatures      `protobuf:"bytes,9,rep,name=signatures" json:"signatures,omitempty"`
}

func (m *RicardianContract) Reset()                    { *m = RicardianContract{} }
func (m *RicardianContract) String() string            { return proto.CompactTextString(m) }
func (*RicardianContract) ProtoMessage()               {}
func (*RicardianContract) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *RicardianContract) GetVendorListings() []*Listing {
	if m != nil {
		return m.VendorListings
	}
	return nil
}

func (m *RicardianContract) GetBuyerOrder() *Order {
	if m != nil {
		return m.BuyerOrder
	}
	return nil
}

func (m *RicardianContract) GetVendorOrderConfirmation() *OrderConfirmation {
	if m != nil {
		return m.VendorOrderConfirmation
	}
	return nil
}

func (m *RicardianContract) GetVendorOrderFulfillment() *OrderFulfillment {
	if m != nil {
		return m.VendorOrderFulfillment
	}
	return nil
}

func (m *RicardianContract) GetBuyerRating() *Rating {
	if m != nil {
		return m.BuyerRating
	}
	return nil
}

func (m *RicardianContract) GetDispute() *Dispute {
	if m != nil {
		return m.Dispute
	}
	return nil
}

func (m *RicardianContract) GetDisputeResolution() *DisputeResolution {
	if m != nil {
		return m.DisputeResolution
	}
	return nil
}

func (m *RicardianContract) GetRefund() *Refund {
	if m != nil {
		return m.Refund
	}
	return nil
}

func (m *RicardianContract) GetSignatures() []*Signatures {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type Listing struct {
	Slug               string                    `protobuf:"bytes,1,opt,name=slug" json:"slug,omitempty"`
	VendorID           *ID                       `protobuf:"bytes,2,opt,name=vendorID" json:"vendorID,omitempty"`
	Metadata           *Listing_Metadata         `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
	Item               *Listing_Item             `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
	ShippingOptions    []*Listing_ShippingOption `protobuf:"bytes,5,rep,name=shippingOptions" json:"shippingOptions,omitempty"`
	Taxes              []*Listing_Tax            `protobuf:"bytes,6,rep,name=taxes" json:"taxes,omitempty"`
	Coupons            []*Listing_Coupon         `protobuf:"bytes,7,rep,name=coupons" json:"coupons,omitempty"`
	Moderators         []string                  `protobuf:"bytes,8,rep,name=moderators" json:"moderators,omitempty"`
	TermsAndConditions string                    `protobuf:"bytes,9,opt,name=termsAndConditions" json:"termsAndConditions,omitempty"`
	RefundPolicy       string                    `protobuf:"bytes,10,opt,name=refundPolicy" json:"refundPolicy,omitempty"`
}

func (m *Listing) Reset()                    { *m = Listing{} }
func (m *Listing) String() string            { return proto.CompactTextString(m) }
func (*Listing) ProtoMessage()               {}
func (*Listing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Listing) GetVendorID() *ID {
	if m != nil {
		return m.VendorID
	}
	return nil
}

func (m *Listing) GetMetadata() *Listing_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Listing) GetItem() *Listing_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Listing) GetShippingOptions() []*Listing_ShippingOption {
	if m != nil {
		return m.ShippingOptions
	}
	return nil
}

func (m *Listing) GetTaxes() []*Listing_Tax {
	if m != nil {
		return m.Taxes
	}
	return nil
}

func (m *Listing) GetCoupons() []*Listing_Coupon {
	if m != nil {
		return m.Coupons
	}
	return nil
}

type Listing_Metadata struct {
	Version          uint32                        `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	ContractType     Listing_Metadata_ContractType `protobuf:"varint,2,opt,name=contractType,enum=Listing_Metadata_ContractType" json:"contractType,omitempty"`
	Format           Listing_Metadata_Format       `protobuf:"varint,3,opt,name=format,enum=Listing_Metadata_Format" json:"format,omitempty"`
	Expiry           *google_protobuf.Timestamp    `protobuf:"bytes,4,opt,name=expiry" json:"expiry,omitempty"`
	AcceptedCurrency string                        `protobuf:"bytes,5,opt,name=acceptedCurrency" json:"acceptedCurrency,omitempty"`
	PricingCurrency  string                        `protobuf:"bytes,6,opt,name=pricingCurrency" json:"pricingCurrency,omitempty"`
}

func (m *Listing_Metadata) Reset()                    { *m = Listing_Metadata{} }
func (m *Listing_Metadata) String() string            { return proto.CompactTextString(m) }
func (*Listing_Metadata) ProtoMessage()               {}
func (*Listing_Metadata) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

func (m *Listing_Metadata) GetExpiry() *google_protobuf.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

type Listing_Item struct {
	Title          string                 `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ProcessingTime string                 `protobuf:"bytes,3,opt,name=processingTime" json:"processingTime,omitempty"`
	Price          uint64                 `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	Nsfw           bool                   `protobuf:"varint,5,opt,name=nsfw" json:"nsfw,omitempty"`
	Tags           []string               `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Images         []*Listing_Item_Image  `protobuf:"bytes,7,rep,name=images" json:"images,omitempty"`
	Categories     []string               `protobuf:"bytes,8,rep,name=categories" json:"categories,omitempty"`
	Sku            string                 `protobuf:"bytes,9,opt,name=sku" json:"sku,omitempty"`
	Grams          float32                `protobuf:"fixed32,10,opt,name=grams" json:"grams,omitempty"`
	Condition      string                 `protobuf:"bytes,11,opt,name=condition" json:"condition,omitempty"`
	Options        []*Listing_Item_Option `protobuf:"bytes,12,rep,name=options" json:"options,omitempty"`
}

func (m *Listing_Item) Reset()                    { *m = Listing_Item{} }
func (m *Listing_Item) String() string            { return proto.CompactTextString(m) }
func (*Listing_Item) ProtoMessage()               {}
func (*Listing_Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1} }

func (m *Listing_Item) GetImages() []*Listing_Item_Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Listing_Item) GetOptions() []*Listing_Item_Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Listing_Item_Option struct {
	Name        string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                          `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Variants    []*Listing_Item_Option_Variants `protobuf:"bytes,3,rep,name=variants" json:"variants,omitempty"`
}

func (m *Listing_Item_Option) Reset()                    { *m = Listing_Item_Option{} }
func (m *Listing_Item_Option) String() string            { return proto.CompactTextString(m) }
func (*Listing_Item_Option) ProtoMessage()               {}
func (*Listing_Item_Option) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1, 0} }

func (m *Listing_Item_Option) GetVariants() []*Listing_Item_Option_Variants {
	if m != nil {
		return m.Variants
	}
	return nil
}

type Listing_Item_Option_Variants struct {
	Name          string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image         *Listing_Item_Image `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	PriceModifier int64               `protobuf:"varint,3,opt,name=priceModifier" json:"priceModifier,omitempty"`
}

func (m *Listing_Item_Option_Variants) Reset()         { *m = Listing_Item_Option_Variants{} }
func (m *Listing_Item_Option_Variants) String() string { return proto.CompactTextString(m) }
func (*Listing_Item_Option_Variants) ProtoMessage()    {}
func (*Listing_Item_Option_Variants) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 1, 0, 0}
}

func (m *Listing_Item_Option_Variants) GetImage() *Listing_Item_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type Listing_Item_Image struct {
	Hash     string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
}

func (m *Listing_Item_Image) Reset()                    { *m = Listing_Item_Image{} }
func (m *Listing_Item_Image) String() string            { return proto.CompactTextString(m) }
func (*Listing_Item_Image) ProtoMessage()               {}
func (*Listing_Item_Image) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 1, 1} }

type Listing_ShippingOption struct {
	Name          string                                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type          Listing_ShippingOption_ShippingType   `protobuf:"varint,2,opt,name=type,enum=Listing_ShippingOption_ShippingType" json:"type,omitempty"`
	Regions       []CountryCode                         `protobuf:"varint,3,rep,name=regions,enum=CountryCode" json:"regions,omitempty"`
	ShippingRules *Listing_ShippingOption_ShippingRules `protobuf:"bytes,4,opt,name=shippingRules" json:"shippingRules,omitempty"`
	Services      []*Listing_ShippingOption_Service     `protobuf:"bytes,5,rep,name=services" json:"services,omitempty"`
}

func (m *Listing_ShippingOption) Reset()                    { *m = Listing_ShippingOption{} }
func (m *Listing_ShippingOption) String() string            { return proto.CompactTextString(m) }
func (*Listing_ShippingOption) ProtoMessage()               {}
func (*Listing_ShippingOption) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 2} }

func (m *Listing_ShippingOption) GetShippingRules() *Listing_ShippingOption_ShippingRules {
	if m != nil {
		return m.ShippingRules
	}
	return nil
}

func (m *Listing_ShippingOption) GetServices() []*Listing_ShippingOption_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

type Listing_ShippingOption_Service struct {
	Name              string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Price             uint64 `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
	EstimatedDelivery string `protobuf:"bytes,3,opt,name=estimatedDelivery" json:"estimatedDelivery,omitempty"`
}

func (m *Listing_ShippingOption_Service) Reset()         { *m = Listing_ShippingOption_Service{} }
func (m *Listing_ShippingOption_Service) String() string { return proto.CompactTextString(m) }
func (*Listing_ShippingOption_Service) ProtoMessage()    {}
func (*Listing_ShippingOption_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 0}
}

type Listing_ShippingOption_ShippingRules struct {
	RuleType Listing_ShippingOption_ShippingRules_RuleType `protobuf:"varint,1,opt,name=ruleType,enum=Listing_ShippingOption_ShippingRules_RuleType" json:"ruleType,omitempty"`
	Rules    []*Listing_ShippingOption_ShippingRules_Rule  `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
}

func (m *Listing_ShippingOption_ShippingRules) Reset()         { *m = Listing_ShippingOption_ShippingRules{} }
func (m *Listing_ShippingOption_ShippingRules) String() string { return proto.CompactTextString(m) }
func (*Listing_ShippingOption_ShippingRules) ProtoMessage()    {}
func (*Listing_ShippingOption_ShippingRules) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 1}
}

func (m *Listing_ShippingOption_ShippingRules) GetRules() []*Listing_ShippingOption_ShippingRules_Rule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type Listing_ShippingOption_ShippingRules_Rule struct {
	MinRange uint32 `protobuf:"varint,1,opt,name=minRange" json:"minRange,omitempty"`
	MaxRange uint32 `protobuf:"varint,2,opt,name=maxRange" json:"maxRange,omitempty"`
	Price    uint64 `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
}

func (m *Listing_ShippingOption_ShippingRules_Rule) Reset() {
	*m = Listing_ShippingOption_ShippingRules_Rule{}
}
func (m *Listing_ShippingOption_ShippingRules_Rule) String() string { return proto.CompactTextString(m) }
func (*Listing_ShippingOption_ShippingRules_Rule) ProtoMessage()    {}
func (*Listing_ShippingOption_ShippingRules_Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 2, 1, 0}
}

type Listing_Tax struct {
	TaxType     string        `protobuf:"bytes,1,opt,name=taxType" json:"taxType,omitempty"`
	TaxRegions  []CountryCode `protobuf:"varint,2,rep,name=taxRegions,enum=CountryCode" json:"taxRegions,omitempty"`
	TaxShipping bool          `protobuf:"varint,3,opt,name=taxShipping" json:"taxShipping,omitempty"`
	Percentage  float32       `protobuf:"fixed32,4,opt,name=percentage" json:"percentage,omitempty"`
}

func (m *Listing_Tax) Reset()                    { *m = Listing_Tax{} }
func (m *Listing_Tax) String() string            { return proto.CompactTextString(m) }
func (*Listing_Tax) ProtoMessage()               {}
func (*Listing_Tax) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 3} }

type Listing_Coupon struct {
	Title           string  `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Hash            string  `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	PercentDiscount float32 `protobuf:"fixed32,3,opt,name=percentDiscount" json:"percentDiscount,omitempty"`
	PriceDiscount   uint64  `protobuf:"varint,4,opt,name=priceDiscount" json:"priceDiscount,omitempty"`
}

func (m *Listing_Coupon) Reset()                    { *m = Listing_Coupon{} }
func (m *Listing_Coupon) String() string            { return proto.CompactTextString(m) }
func (*Listing_Coupon) ProtoMessage()               {}
func (*Listing_Coupon) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 4} }

type Order struct {
	RefundAddress        string                     `protobuf:"bytes,1,opt,name=refundAddress" json:"refundAddress,omitempty"`
	RefundFee            uint64                     `protobuf:"varint,2,opt,name=refundFee" json:"refundFee,omitempty"`
	Shipping             *Order_Shipping            `protobuf:"bytes,3,opt,name=shipping" json:"shipping,omitempty"`
	BuyerID              *ID                        `protobuf:"bytes,4,opt,name=buyerID" json:"buyerID,omitempty"`
	Timestamp            *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Items                []*Order_Item              `protobuf:"bytes,6,rep,name=items" json:"items,omitempty"`
	Payment              *Order_Payment             `protobuf:"bytes,7,opt,name=payment" json:"payment,omitempty"`
	RatingKey            []byte                     `protobuf:"bytes,8,opt,name=ratingKey,proto3" json:"ratingKey,omitempty"`
	AlternateContactInfo string                     `protobuf:"bytes,9,opt,name=alternateContactInfo" json:"alternateContactInfo,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Order) GetShipping() *Order_Shipping {
	if m != nil {
		return m.Shipping
	}
	return nil
}

func (m *Order) GetBuyerID() *ID {
	if m != nil {
		return m.BuyerID
	}
	return nil
}

func (m *Order) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Order) GetItems() []*Order_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetPayment() *Order_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

type Order_Shipping struct {
	ShipTo       string      `protobuf:"bytes,1,opt,name=shipTo" json:"shipTo,omitempty"`
	Address      string      `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	City         string      `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	State        string      `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	PostalCode   string      `protobuf:"bytes,5,opt,name=postalCode" json:"postalCode,omitempty"`
	Country      CountryCode `protobuf:"varint,6,opt,name=country,enum=CountryCode" json:"country,omitempty"`
	AddressNotes string      `protobuf:"bytes,7,opt,name=addressNotes" json:"addressNotes,omitempty"`
}

func (m *Order_Shipping) Reset()                    { *m = Order_Shipping{} }
func (m *Order_Shipping) String() string            { return proto.CompactTextString(m) }
func (*Order_Shipping) ProtoMessage()               {}
func (*Order_Shipping) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type Order_Item struct {
	ListingHash    string                     `protobuf:"bytes,1,opt,name=listingHash" json:"listingHash,omitempty"`
	Quantity       uint32                     `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	Options        []*Order_Item_Option       `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
	ShippingOption *Order_Item_ShippingOption `protobuf:"bytes,4,opt,name=shippingOption" json:"shippingOption,omitempty"`
	Memo           string                     `protobuf:"bytes,5,opt,name=memo" json:"memo,omitempty"`
	CouponCodes    []string                   `protobuf:"bytes,6,rep,name=couponCodes" json:"couponCodes,omitempty"`
}

func (m *Order_Item) Reset()                    { *m = Order_Item{} }
func (m *Order_Item) String() string            { return proto.CompactTextString(m) }
func (*Order_Item) ProtoMessage()               {}
func (*Order_Item) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1} }

func (m *Order_Item) GetOptions() []*Order_Item_Option {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Order_Item) GetShippingOption() *Order_Item_ShippingOption {
	if m != nil {
		return m.ShippingOption
	}
	return nil
}

type Order_Item_Option struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Order_Item_Option) Reset()                    { *m = Order_Item_Option{} }
func (m *Order_Item_Option) String() string            { return proto.CompactTextString(m) }
func (*Order_Item_Option) ProtoMessage()               {}
func (*Order_Item_Option) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1, 0} }

type Order_Item_ShippingOption struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Service string `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
}

func (m *Order_Item_ShippingOption) Reset()                    { *m = Order_Item_ShippingOption{} }
func (m *Order_Item_ShippingOption) String() string            { return proto.CompactTextString(m) }
func (*Order_Item_ShippingOption) ProtoMessage()               {}
func (*Order_Item_ShippingOption) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 1, 1} }

type Order_Payment struct {
	Method       Order_Payment_Method `protobuf:"varint,1,opt,name=method,enum=Order_Payment_Method" json:"method,omitempty"`
	Moderator    string               `protobuf:"bytes,2,opt,name=moderator" json:"moderator,omitempty"`
	Amount       uint64               `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	ExchangeRate uint64               `protobuf:"varint,4,opt,name=exchangeRate" json:"exchangeRate,omitempty"`
	Chaincode    string               `protobuf:"bytes,6,opt,name=chaincode" json:"chaincode,omitempty"`
	Address      string               `protobuf:"bytes,7,opt,name=address" json:"address,omitempty"`
	RedeemScript string               `protobuf:"bytes,8,opt,name=redeemScript" json:"redeemScript,omitempty"`
}

func (m *Order_Payment) Reset()                    { *m = Order_Payment{} }
func (m *Order_Payment) String() string            { return proto.CompactTextString(m) }
func (*Order_Payment) ProtoMessage()               {}
func (*Order_Payment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 2} }

type OrderConfirmation struct {
	OrderID         string `protobuf:"bytes,1,opt,name=orderID" json:"orderID,omitempty"`
	PaymentAddress  string `protobuf:"bytes,2,opt,name=paymentAddress" json:"paymentAddress,omitempty"`
	RequestedAmount uint64 `protobuf:"varint,3,opt,name=requestedAmount" json:"requestedAmount,omitempty"`
	PayoutFee       uint64 `protobuf:"varint,4,opt,name=payoutFee" json:"payoutFee,omitempty"`
	RatingSignature []byte `protobuf:"bytes,5,opt,name=ratingSignature,proto3" json:"ratingSignature,omitempty"`
}

func (m *OrderConfirmation) Reset()                    { *m = OrderConfirmation{} }
func (m *OrderConfirmation) String() string            { return proto.CompactTextString(m) }
func (*OrderConfirmation) ProtoMessage()               {}
func (*OrderConfirmation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type OrderReject struct {
	OrderID string              `protobuf:"bytes,1,opt,name=orderID" json:"orderID,omitempty"`
	Sigs    []*BitcoinSignature `protobuf:"bytes,2,rep,name=sigs" json:"sigs,omitempty"`
}

func (m *OrderReject) Reset()                    { *m = OrderReject{} }
func (m *OrderReject) String() string            { return proto.CompactTextString(m) }
func (*OrderReject) ProtoMessage()               {}
func (*OrderReject) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *OrderReject) GetSigs() []*BitcoinSignature {
	if m != nil {
		return m.Sigs
	}
	return nil
}

type BitcoinSignature struct {
	InputIndex uint32 `protobuf:"varint,1,opt,name=inputIndex" json:"inputIndex,omitempty"`
	Signature  []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *BitcoinSignature) Reset()                    { *m = BitcoinSignature{} }
func (m *BitcoinSignature) String() string            { return proto.CompactTextString(m) }
func (*BitcoinSignature) ProtoMessage()               {}
func (*BitcoinSignature) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// TODO: complete other messages
type OrderFulfillment struct {
}

func (m *OrderFulfillment) Reset()                    { *m = OrderFulfillment{} }
func (m *OrderFulfillment) String() string            { return proto.CompactTextString(m) }
func (*OrderFulfillment) ProtoMessage()               {}
func (*OrderFulfillment) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

type Rating struct {
}

func (m *Rating) Reset()                    { *m = Rating{} }
func (m *Rating) String() string            { return proto.CompactTextString(m) }
func (*Rating) ProtoMessage()               {}
func (*Rating) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

type Dispute struct {
}

func (m *Dispute) Reset()                    { *m = Dispute{} }
func (m *Dispute) String() string            { return proto.CompactTextString(m) }
func (*Dispute) ProtoMessage()               {}
func (*Dispute) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type DisputeResolution struct {
}

func (m *DisputeResolution) Reset()                    { *m = DisputeResolution{} }
func (m *DisputeResolution) String() string            { return proto.CompactTextString(m) }
func (*DisputeResolution) ProtoMessage()               {}
func (*DisputeResolution) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

type Refund struct {
	OrderID string              `protobuf:"bytes,1,opt,name=orderID" json:"orderID,omitempty"`
	Sigs    []*BitcoinSignature `protobuf:"bytes,2,rep,name=sigs" json:"sigs,omitempty"`
	Memo    string              `protobuf:"bytes,3,opt,name=memo" json:"memo,omitempty"`
}

func (m *Refund) Reset()                    { *m = Refund{} }
func (m *Refund) String() string            { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()               {}
func (*Refund) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *Refund) GetSigs() []*BitcoinSignature {
	if m != nil {
		return m.Sigs
	}
	return nil
}

type ID struct {
	Guid         string      `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
	BlockchainID string      `protobuf:"bytes,2,opt,name=blockchainID" json:"blockchainID,omitempty"`
	Pubkeys      *ID_Pubkeys `protobuf:"bytes,3,opt,name=pubkeys" json:"pubkeys,omitempty"`
}

func (m *ID) Reset()                    { *m = ID{} }
func (m *ID) String() string            { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()               {}
func (*ID) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *ID) GetPubkeys() *ID_Pubkeys {
	if m != nil {
		return m.Pubkeys
	}
	return nil
}

type ID_Pubkeys struct {
	Guid    []byte `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Bitcoin []byte `protobuf:"bytes,2,opt,name=bitcoin,proto3" json:"bitcoin,omitempty"`
}

func (m *ID_Pubkeys) Reset()                    { *m = ID_Pubkeys{} }
func (m *ID_Pubkeys) String() string            { return proto.CompactTextString(m) }
func (*ID_Pubkeys) ProtoMessage()               {}
func (*ID_Pubkeys) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11, 0} }

type Signatures struct {
	Section Signatures_Section `protobuf:"varint,1,opt,name=section,enum=Signatures_Section" json:"section,omitempty"`
	Guid    []byte             `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	Bitcoin []byte             `protobuf:"bytes,3,opt,name=bitcoin,proto3" json:"bitcoin,omitempty"`
}

func (m *Signatures) Reset()                    { *m = Signatures{} }
func (m *Signatures) String() string            { return proto.CompactTextString(m) }
func (*Signatures) ProtoMessage()               {}
func (*Signatures) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func init() {
	proto.RegisterType((*RicardianContract)(nil), "RicardianContract")
	proto.RegisterType((*Listing)(nil), "Listing")
	proto.RegisterType((*Listing_Metadata)(nil), "Listing.Metadata")
	proto.RegisterType((*Listing_Item)(nil), "Listing.Item")
	proto.RegisterType((*Listing_Item_Option)(nil), "Listing.Item.Option")
	proto.RegisterType((*Listing_Item_Option_Variants)(nil), "Listing.Item.Option.Variants")
	proto.RegisterType((*Listing_Item_Image)(nil), "Listing.Item.Image")
	proto.RegisterType((*Listing_ShippingOption)(nil), "Listing.ShippingOption")
	proto.RegisterType((*Listing_ShippingOption_Service)(nil), "Listing.ShippingOption.Service")
	proto.RegisterType((*Listing_ShippingOption_ShippingRules)(nil), "Listing.ShippingOption.ShippingRules")
	proto.RegisterType((*Listing_ShippingOption_ShippingRules_Rule)(nil), "Listing.ShippingOption.ShippingRules.Rule")
	proto.RegisterType((*Listing_Tax)(nil), "Listing.Tax")
	proto.RegisterType((*Listing_Coupon)(nil), "Listing.Coupon")
	proto.RegisterType((*Order)(nil), "Order")
	proto.RegisterType((*Order_Shipping)(nil), "Order.Shipping")
	proto.RegisterType((*Order_Item)(nil), "Order.Item")
	proto.RegisterType((*Order_Item_Option)(nil), "Order.Item.Option")
	proto.RegisterType((*Order_Item_ShippingOption)(nil), "Order.Item.ShippingOption")
	proto.RegisterType((*Order_Payment)(nil), "Order.Payment")
	proto.RegisterType((*OrderConfirmation)(nil), "OrderConfirmation")
	proto.RegisterType((*OrderReject)(nil), "OrderReject")
	proto.RegisterType((*BitcoinSignature)(nil), "BitcoinSignature")
	proto.RegisterType((*OrderFulfillment)(nil), "OrderFulfillment")
	proto.RegisterType((*Rating)(nil), "Rating")
	proto.RegisterType((*Dispute)(nil), "Dispute")
	proto.RegisterType((*DisputeResolution)(nil), "DisputeResolution")
	proto.RegisterType((*Refund)(nil), "Refund")
	proto.RegisterType((*ID)(nil), "ID")
	proto.RegisterType((*ID_Pubkeys)(nil), "ID.Pubkeys")
	proto.RegisterType((*Signatures)(nil), "Signatures")
	proto.RegisterEnum("Listing_Metadata_ContractType", Listing_Metadata_ContractType_name, Listing_Metadata_ContractType_value)
	proto.RegisterEnum("Listing_Metadata_Format", Listing_Metadata_Format_name, Listing_Metadata_Format_value)
	proto.RegisterEnum("Listing_ShippingOption_ShippingType", Listing_ShippingOption_ShippingType_name, Listing_ShippingOption_ShippingType_value)
	proto.RegisterEnum("Listing_ShippingOption_ShippingRules_RuleType", Listing_ShippingOption_ShippingRules_RuleType_name, Listing_ShippingOption_ShippingRules_RuleType_value)
	proto.RegisterEnum("Order_Payment_Method", Order_Payment_Method_name, Order_Payment_Method_value)
	proto.RegisterEnum("Signatures_Section", Signatures_Section_name, Signatures_Section_value)
}

var fileDescriptor1 = []byte{
	// 2207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0x49, 0x93, 0x1b, 0x49,
	0x15, 0x46, 0x4b, 0x97, 0xa4, 0xd7, 0x6a, 0xb5, 0x94, 0xde, 0x44, 0xc1, 0xd8, 0x46, 0x31, 0x43,
	0x78, 0x06, 0xa8, 0x01, 0x73, 0x60, 0x08, 0x22, 0x08, 0x64, 0x49, 0x6d, 0x17, 0x6e, 0x4b, 0x9a,
	0x94, 0x34, 0x66, 0x0e, 0x44, 0x47, 0x75, 0x29, 0x5b, 0x5d, 0x58, 0x52, 0x69, 0xaa, 0x4a, 0xc6,
	0x7d, 0x23, 0x38, 0x12, 0x41, 0x70, 0xe1, 0xc8, 0x0f, 0x80, 0xf3, 0xfc, 0x08, 0xee, 0xf0, 0x07,
	0xb8, 0x70, 0xe1, 0x57, 0xf0, 0xf2, 0x65, 0x66, 0xa9, 0xb4, 0xd8, 0x38, 0x82, 0x5b, 0xbe, 0x25,
	0xb7, 0xb7, 0x7e, 0x99, 0x70, 0xea, 0x87, 0xcb, 0x24, 0xf2, 0xfc, 0x24, 0x76, 0x56, 0x51, 0x98,
	0x84, 0x36, 0xf3, 0xc3, 0x35, 0x72, 0x6e, 0xfc, 0x70, 0x2a, 0x0c, 0xef, 0xc1, 0x2c, 0x0c, 0x67,
	0x73, 0xf1, 0x29, 0x51, 0x97, 0xeb, 0xab, 0x4f, 0x93, 0x60, 0x21, 0xe2, 0xc4, 0x5b, 0xac, 0x94,
	0x42, 0xeb, 0xdf, 0x05, 0x68, 0xf0, 0xc0, 0xf7, 0xa2, 0x69, 0xe0, 0x2d, 0x3b, 0x7a, 0x45, 0xf6,
	0x43, 0xa8, 0xbd, 0x16, 0xcb, 0x69, 0x18, 0x9d, 0x07, 0x71, 0x12, 0x2c, 0x67, 0x71, 0x33, 0xf7,
	0xb0, 0xf0, 0xe8, 0xf8, 0x71, 0xd9, 0xd1, 0x0c, 0xbe, 0x23, 0x67, 0xdf, 0x05, 0xb8, 0x5c, 0xdf,
	0x88, 0x68, 0x10, 0x4d, 0x45, 0xd4, 0xcc, 0x3f, 0xcc, 0xa1, 0xb6, 0xe5, 0x10, 0xc5, 0x33, 0x12,
	0x76, 0x0e, 0xf7, 0xd4, 0x4c, 0x22, 0x71, 0xc3, 0xab, 0x20, 0x5a, 0x78, 0x49, 0x10, 0x2e, 0x9b,
	0x05, 0x9a, 0xc4, 0x9c, 0x3d, 0x09, 0x7f, 0xdb, 0x14, 0xe6, 0xc2, 0xdd, 0x8c, 0xe8, 0x6c, 0x3d,
	0xbf, 0x0a, 0xe6, 0xf3, 0x85, 0x58, 0x26, 0xcd, 0x22, 0x2d, 0xd6, 0x70, 0x76, 0x05, 0xfc, 0x2d,
	0x13, 0xd8, 0xc7, 0x70, 0x4c, 0xc7, 0xe4, 0x9e, 0xbc, 0x50, 0xf3, 0x88, 0xe6, 0x97, 0x1c, 0x45,
	0xf2, 0xac, 0x8c, 0xb5, 0xa0, 0x34, 0x0d, 0xe2, 0xd5, 0x3a, 0x11, 0x4d, 0x8b, 0xd4, 0xca, 0x4e,
	0x57, 0xd1, 0xdc, 0x08, 0xd8, 0x2f, 0xa0, 0xa1, 0x87, 0x5c, 0xc4, 0xe1, 0x7c, 0x4d, 0x37, 0x2c,
	0xe9, 0x1b, 0x76, 0x77, 0x25, 0x7c, 0x5f, 0x99, 0x3d, 0x00, 0x2b, 0x12, 0x57, 0xeb, 0xe5, 0xb4,
	0x59, 0x36, 0x67, 0x21, 0x92, 0x6b, 0x36, 0xfb, 0x1e, 0x40, 0x1c, 0xcc, 0x96, 0x5e, 0xb2, 0x8e,
	0x44, 0xdc, 0xac, 0x90, 0x83, 0x8e, 0x9d, 0x51, 0xca, 0xe2, 0x19, 0x71, 0xeb, 0x6f, 0xb7, 0xa1,
	0xa4, 0x9d, 0xc5, 0x18, 0x14, 0xe3, 0xf9, 0x7a, 0x86, 0x3e, 0xcd, 0x3d, 0xaa, 0x70, 0x1a, 0xe3,
	0x6e, 0x65, 0x65, 0x18, 0xb7, 0xab, 0xbd, 0x57, 0x70, 0xdc, 0x2e, 0x4f, 0x99, 0xec, 0x07, 0x50,
	0x5e, 0x88, 0xc4, 0x9b, 0x7a, 0x89, 0xa7, 0x3d, 0xd5, 0x30, 0xc1, 0xe0, 0xbc, 0xd0, 0x02, 0x9e,
	0xaa, 0xb0, 0xef, 0x40, 0x31, 0x48, 0xc4, 0x42, 0xfb, 0xe1, 0x24, 0x55, 0x75, 0x91, 0xc9, 0x49,
	0xc4, 0xda, 0x70, 0x1a, 0x5f, 0x07, 0xab, 0x15, 0xb2, 0x07, 0x2b, 0x79, 0xe5, 0x18, 0xad, 0x2e,
	0x2f, 0x71, 0x2f, 0xd5, 0x1e, 0x6d, 0xc9, 0xf9, 0xae, 0x3e, 0x7a, 0xe2, 0x28, 0xf1, 0xde, 0xe0,
	0xed, 0x2d, 0x9a, 0x58, 0x4d, 0x27, 0x8e, 0xbd, 0x37, 0x5c, 0x89, 0xd0, 0xb1, 0x25, 0x4c, 0x8c,
	0x95, 0x5c, 0xbe, 0x44, 0x5a, 0xa7, 0xa9, 0x56, 0x87, 0xf8, 0xdc, 0xc8, 0xd9, 0x7d, 0x80, 0x05,
	0x26, 0x4f, 0xe4, 0x25, 0x61, 0x14, 0xa3, 0xd9, 0x0b, 0x68, 0x9e, 0x0c, 0x87, 0x39, 0xc0, 0x12,
	0x11, 0x2d, 0xe2, 0xf6, 0x72, 0x8a, 0x61, 0x38, 0x0d, 0xd4, 0xa1, 0x2b, 0x64, 0xc6, 0x03, 0x12,
	0x3c, 0x5e, 0x55, 0xf9, 0x6a, 0x18, 0xce, 0x03, 0xff, 0xa6, 0x09, 0xa4, 0xb9, 0xc5, 0xb3, 0xbf,
	0x2e, 0x40, 0xd9, 0xd8, 0x8f, 0x35, 0xa1, 0xf4, 0x5a, 0x44, 0xb1, 0x8c, 0x15, 0xe9, 0x9c, 0x13,
	0x6e, 0x48, 0xf6, 0x04, 0xaa, 0x26, 0xdf, 0xc7, 0x37, 0x2b, 0x41, 0x3e, 0xaa, 0x3d, 0xbe, 0xbf,
	0xe7, 0x02, 0xa7, 0x93, 0xd1, 0xe2, 0x5b, 0x73, 0x30, 0xab, 0xad, 0xab, 0x50, 0xa6, 0x0e, 0x39,
	0xb0, 0xf6, 0xb8, 0xb9, 0x3f, 0xfb, 0x8c, 0xe4, 0x5c, 0xeb, 0xb1, 0xc7, 0x60, 0x89, 0x37, 0xab,
	0x20, 0xba, 0xd1, 0x7e, 0xb4, 0x1d, 0x55, 0x4f, 0x1c, 0x53, 0x4f, 0x9c, 0xb1, 0xa9, 0x27, 0x5c,
	0x6b, 0xb2, 0x4f, 0xa0, 0xee, 0xf9, 0xbe, 0x58, 0x25, 0x62, 0xda, 0x59, 0x47, 0x91, 0x58, 0xe2,
	0xc5, 0x8f, 0xe8, 0xe2, 0x7b, 0x7c, 0xf6, 0x08, 0x4e, 0x57, 0x51, 0xe0, 0xe3, 0x11, 0x52, 0x55,
	0x8b, 0x54, 0x77, 0xd9, 0xad, 0x5f, 0x43, 0x35, 0x7b, 0x33, 0x76, 0x0c, 0xa5, 0x49, 0xff, 0x79,
	0x7f, 0xf0, 0xb2, 0x5f, 0xff, 0x06, 0x6b, 0xc0, 0xc9, 0xf0, 0xd9, 0x97, 0x23, 0xb7, 0xd3, 0x3e,
	0xbf, 0x78, 0x3a, 0x18, 0x74, 0xeb, 0x39, 0x56, 0x87, 0x6a, 0xd7, 0x7d, 0xea, 0x8e, 0x0d, 0x27,
	0x2f, 0x67, 0x8c, 0x7a, 0xfc, 0x0b, 0xb7, 0xd3, 0xab, 0x17, 0x58, 0x0d, 0xa0, 0xc3, 0x07, 0x2f,
	0xbb, 0x17, 0x67, 0x93, 0x7e, 0xb7, 0x5e, 0x6c, 0x39, 0x60, 0xa9, 0xab, 0x33, 0x0b, 0xf2, 0xfd,
	0x36, 0xae, 0x79, 0x0a, 0xc7, 0x67, 0xee, 0xaf, 0x7a, 0xdd, 0x8b, 0x21, 0x97, 0x53, 0x72, 0x72,
	0x7e, 0x7b, 0xd2, 0x19, 0xbb, 0x83, 0x7e, 0x3d, 0x6f, 0xff, 0xf1, 0x08, 0x8a, 0x32, 0x94, 0xd9,
	0x6d, 0x8c, 0xc0, 0x20, 0x99, 0x0b, 0x9d, 0x4c, 0x8a, 0x60, 0x0f, 0xe1, 0x18, 0x6b, 0xb0, 0x1f,
	0x05, 0x14, 0xa7, 0xe4, 0xac, 0x0a, 0xcf, 0xb2, 0xb0, 0x5e, 0xd6, 0xd0, 0x86, 0xbe, 0x88, 0x63,
	0xbc, 0xa5, 0x34, 0x22, 0xf9, 0xa4, 0xc2, 0x77, 0xb8, 0x72, 0x7d, 0x69, 0x0a, 0x41, 0x0e, 0x28,
	0x72, 0x45, 0xc8, 0x0c, 0x5e, 0xc6, 0x57, 0xbf, 0x25, 0xbb, 0x96, 0x39, 0x8d, 0x25, 0x2f, 0xf1,
	0x66, 0x2a, 0x15, 0x30, 0xab, 0xe5, 0x18, 0x4b, 0x84, 0x15, 0x2c, 0xbc, 0x99, 0x30, 0xa1, 0x7f,
	0x6b, 0x2b, 0x0f, 0x1d, 0x57, 0xca, 0xb8, 0x56, 0x91, 0xd1, 0xef, 0x7b, 0x89, 0x98, 0x85, 0x51,
	0x20, 0xd2, 0xe8, 0xdf, 0x70, 0xd0, 0xa4, 0x85, 0xf8, 0xd5, 0x5a, 0x87, 0xbb, 0x1c, 0xca, 0xc3,
	0xcd, 0x22, 0x6f, 0x11, 0x53, 0x60, 0xe7, 0xb9, 0x22, 0xd8, 0xb7, 0xa1, 0xe2, 0x9b, 0x1c, 0x68,
	0x1e, 0x93, 0xf6, 0x86, 0x81, 0x39, 0x54, 0x0a, 0x75, 0xb6, 0x57, 0xe9, 0x4c, 0xb7, 0xb7, 0xcf,
	0xa4, 0x53, 0xdd, 0x28, 0xd9, 0xff, 0xc9, 0x81, 0xa5, 0x78, 0x74, 0x6b, 0x6f, 0x61, 0x4c, 0x4d,
	0xe3, 0xf7, 0xb0, 0xf4, 0x4f, 0xb1, 0xb2, 0x79, 0x11, 0x76, 0xb7, 0x24, 0x46, 0x1b, 0xcb, 0x1d,
	0x3f, 0x38, 0xb4, 0xa3, 0xf3, 0x85, 0x56, 0xe2, 0xa9, 0xba, 0x1d, 0x42, 0xd9, 0x70, 0x0f, 0x6e,
	0xfe, 0x31, 0x1c, 0x91, 0xed, 0x74, 0xc5, 0x3c, 0x68, 0x5d, 0xa5, 0xc1, 0x3e, 0x84, 0x13, 0x72,
	0xdd, 0x8b, 0x70, 0x1a, 0x5c, 0x05, 0xd8, 0x22, 0xa5, 0xbb, 0x0b, 0x7c, 0x9b, 0x69, 0xff, 0x04,
	0x8e, 0x68, 0x96, 0xdc, 0xed, 0xda, 0x8b, 0xaf, 0xcd, 0x6e, 0x72, 0xcc, 0x6c, 0x28, 0x63, 0xb7,
	0x12, 0x74, 0x0a, 0x75, 0xcf, 0x94, 0xb6, 0xbf, 0xb6, 0xa0, 0xb6, 0x5d, 0x2c, 0x0f, 0x1e, 0xf8,
	0x33, 0x8c, 0x91, 0x4d, 0xf5, 0xf8, 0xf0, 0x2d, 0x75, 0x36, 0x25, 0xa9, 0x86, 0xd0, 0x0c, 0x8c,
	0xd7, 0x52, 0x24, 0x66, 0xe4, 0x36, 0x69, 0xc4, 0x1a, 0xd6, 0xda, 0x8e, 0x82, 0x1b, 0x1d, 0xac,
	0x8f, 0xdc, 0x08, 0xd9, 0x73, 0x38, 0x31, 0x45, 0x9a, 0xaf, 0xe7, 0x18, 0x47, 0xaa, 0x70, 0x7c,
	0xf4, 0xbf, 0xb6, 0x22, 0x65, 0xbe, 0x3d, 0x97, 0xfd, 0x0c, 0xca, 0xb1, 0x88, 0x5e, 0xa3, 0x85,
	0x4c, 0x6b, 0x78, 0xf0, 0xd6, 0x75, 0x94, 0x1e, 0x4f, 0x27, 0xd8, 0x1e, 0xe6, 0xbb, 0x1a, 0x1f,
	0x34, 0x45, 0x9a, 0x58, 0xf9, 0x6c, 0x62, 0x7d, 0x1f, 0x1a, 0x58, 0xce, 0xd0, 0x65, 0x58, 0xa5,
	0xba, 0x62, 0x1e, 0x60, 0xf9, 0xbd, 0xd1, 0x99, 0xb9, 0x2f, 0xb0, 0xff, 0x50, 0x80, 0x93, 0xad,
	0x0b, 0xb0, 0x5f, 0x42, 0x39, 0xc2, 0x01, 0x95, 0xe8, 0x1c, 0x19, 0xd9, 0x79, 0xaf, 0x9b, 0x3b,
	0x5c, 0xcf, 0xe2, 0xe9, 0x7c, 0x84, 0x10, 0x47, 0x11, 0x99, 0x30, 0x4f, 0x57, 0xff, 0xe4, 0xfd,
	0x17, 0xe2, 0x6a, 0xa2, 0x3d, 0x86, 0xa2, 0x24, 0x65, 0xe4, 0x2c, 0x82, 0x25, 0xf7, 0x96, 0x33,
	0xa1, 0xfb, 0x4a, 0x4a, 0x93, 0x0c, 0x9b, 0x25, 0xc9, 0xf2, 0x5a, 0xa6, 0xe9, 0x8d, 0x8d, 0x0a,
	0x19, 0x1b, 0xb5, 0xfe, 0x9c, 0x83, 0xb2, 0x39, 0x2e, 0xbb, 0x03, 0x8d, 0xcf, 0x27, 0xed, 0xfe,
	0xd8, 0x1d, 0x7f, 0x79, 0xd1, 0x75, 0x47, 0x9d, 0xc1, 0xa4, 0x3f, 0xc6, 0xea, 0xf9, 0x2d, 0xb8,
	0x77, 0x76, 0xde, 0x1e, 0x5f, 0x9c, 0xf5, 0x7a, 0x17, 0xa9, 0x9c, 0xb7, 0xfb, 0x4f, 0x65, 0x25,
	0xfd, 0x26, 0xdc, 0x49, 0x85, 0x2f, 0x7b, 0xee, 0xd3, 0x67, 0x63, 0x2d, 0xca, 0x4b, 0x51, 0x67,
	0xf0, 0xe2, 0x89, 0xdb, 0xc7, 0xc2, 0x3b, 0x7a, 0xe6, 0x0e, 0x87, 0x6e, 0xff, 0xe9, 0x45, 0xbb,
	0xdb, 0xc5, 0x92, 0x7d, 0x1f, 0xec, 0x7d, 0xd1, 0x68, 0xf2, 0x64, 0xcc, 0xdb, 0x9d, 0x31, 0x96,
	0xf0, 0x1f, 0x41, 0x35, 0x1b, 0xb7, 0xb2, 0x03, 0x9c, 0x0f, 0x64, 0x47, 0x18, 0xba, 0x9d, 0xe7,
	0x93, 0xe1, 0x81, 0x92, 0x6e, 0xff, 0x29, 0x07, 0x05, 0x44, 0x0a, 0xb2, 0xed, 0x22, 0x56, 0x48,
	0x9d, 0x56, 0xe1, 0x86, 0xc4, 0x78, 0x00, 0x1c, 0x72, 0x1d, 0xf9, 0xf9, 0x03, 0x91, 0x9f, 0x91,
	0xcb, 0x62, 0x84, 0x94, 0x39, 0x05, 0x59, 0xad, 0xcc, 0xb3, 0x2c, 0x59, 0x63, 0x57, 0x22, 0xf2,
	0x11, 0x70, 0xca, 0xb2, 0x51, 0xa4, 0xb2, 0x99, 0xe1, 0xd8, 0xbf, 0xc7, 0x6a, 0xa7, 0x50, 0xc9,
	0x5b, 0x3a, 0x8b, 0x29, 0x0c, 0xf9, 0x4c, 0x61, 0x90, 0x5d, 0x54, 0x2d, 0x81, 0xc0, 0x92, 0x1e,
	0x01, 0xb4, 0x75, 0x9e, 0xef, 0xb2, 0xd3, 0x2a, 0x94, 0xea, 0xa9, 0xae, 0xb2, 0xcd, 0x6c, 0xfd,
	0xb3, 0x02, 0x47, 0x0a, 0xad, 0xa3, 0xbe, 0x02, 0x2b, 0xed, 0xe9, 0x14, 0x51, 0x64, 0xac, 0xcf,
	0xb2, 0xcd, 0x94, 0x05, 0x5f, 0x31, 0xce, 0x84, 0x49, 0xa7, 0x0d, 0x03, 0x7b, 0x50, 0x39, 0xce,
	0x5a, 0x44, 0x02, 0x30, 0x5a, 0x7d, 0x13, 0xb8, 0xa9, 0x02, 0xfb, 0x00, 0x4a, 0x84, 0xb4, 0x11,
	0x85, 0x16, 0x37, 0x28, 0xd4, 0xf0, 0xb0, 0x7e, 0x55, 0xd2, 0x07, 0x8c, 0x86, 0xe8, 0xef, 0x82,
	0x24, 0x1b, 0x65, 0xc4, 0xa3, 0x47, 0x12, 0x74, 0x1a, 0xa4, 0x78, 0xac, 0x8f, 0x40, 0x70, 0x54,
	0x49, 0xd0, 0x8c, 0xa5, 0x95, 0x77, 0x43, 0xaf, 0x07, 0x05, 0xd4, 0x6b, 0x5a, 0x69, 0xa8, 0xb8,
	0xdc, 0x88, 0xe9, 0xc2, 0xf4, 0x14, 0x78, 0x2e, 0x6e, 0x08, 0x9d, 0x57, 0xf9, 0x86, 0x81, 0xa0,
	0xe9, 0xb6, 0x37, 0x47, 0x34, 0x88, 0xd0, 0x5b, 0x48, 0xcc, 0x82, 0x90, 0xc5, 0x5d, 0x5e, 0x85,
	0xba, 0x71, 0x1e, 0x94, 0xd9, 0xff, 0xc0, 0x9c, 0x4a, 0x83, 0xe4, 0x2e, 0x58, 0xd2, 0x20, 0xe3,
	0x50, 0x9b, 0x5b, 0x53, 0x32, 0x4c, 0x3d, 0xed, 0x07, 0xe5, 0x7e, 0x43, 0xca, 0xa8, 0xf0, 0x83,
	0xc4, 0x54, 0x2a, 0x1a, 0xcb, 0xf8, 0xc1, 0xab, 0x27, 0x2a, 0xca, 0x30, 0x7e, 0x88, 0xa0, 0x00,
	0x0c, 0x71, 0x38, 0x97, 0xc1, 0xab, 0x71, 0x59, 0x86, 0x23, 0xeb, 0xbc, 0x7e, 0x46, 0x12, 0x12,
	0xdb, 0xab, 0xf3, 0x5a, 0x28, 0xa1, 0xad, 0xde, 0xbc, 0x1f, 0x26, 0x84, 0x2f, 0x08, 0xda, 0x66,
	0x79, 0xf6, 0xbf, 0xf2, 0x1a, 0x24, 0x61, 0x5e, 0xcc, 0x55, 0xed, 0x7a, 0xb6, 0x69, 0x6a, 0x59,
	0x96, 0xac, 0x42, 0x5f, 0xad, 0xb1, 0xcf, 0xca, 0x4b, 0xe8, 0x2a, 0x64, 0x68, 0xcc, 0xc1, 0x14,
	0x31, 0xa8, 0xfe, 0xcd, 0x32, 0xce, 0xdb, 0xc5, 0x0b, 0x08, 0x94, 0x6b, 0xdb, 0xaf, 0x84, 0x14,
	0xba, 0x66, 0x26, 0xed, 0xbc, 0x2b, 0x76, 0x66, 0x48, 0x73, 0x2e, 0xc4, 0x22, 0xd4, 0xe6, 0xa1,
	0xb1, 0xbc, 0x83, 0x7a, 0x26, 0x48, 0x3b, 0x18, 0x94, 0x95, 0x65, 0xd9, 0x8f, 0xdf, 0x09, 0x54,
	0xd0, 0x1d, 0xaf, 0xbd, 0xf9, 0xda, 0xb4, 0x6e, 0x45, 0xd8, 0x3f, 0x7f, 0xaf, 0xb6, 0x8d, 0x8e,
	0xd7, 0x6d, 0xcd, 0x38, 0x5e, 0x93, 0xf6, 0x5f, 0xf3, 0x50, 0xd2, 0xe1, 0x89, 0x2f, 0x34, 0x0b,
	0x9f, 0x5f, 0xd7, 0xe1, 0x54, 0x77, 0x9e, 0x3b, 0xdb, 0xe1, 0x2b, 0x41, 0x3e, 0x0a, 0xb9, 0x56,
	0x92, 0x41, 0x9c, 0x3e, 0x6d, 0xf4, 0xb2, 0x1b, 0x86, 0x8c, 0x41, 0x6f, 0x91, 0x96, 0x92, 0x22,
	0xd7, 0x94, 0xf4, 0xbb, 0x78, 0xe3, 0x5f, 0xcb, 0xf6, 0xc0, 0x4d, 0x70, 0x15, 0xf9, 0x16, 0x8f,
	0x00, 0xe0, 0xb5, 0x17, 0x2c, 0xe5, 0x47, 0x84, 0xc6, 0xf3, 0x1b, 0x46, 0x36, 0x8a, 0x4b, 0xdb,
	0x51, 0x4c, 0xcf, 0xa5, 0xa9, 0x10, 0x8b, 0x11, 0x81, 0x37, 0xca, 0x2c, 0x7a, 0x2e, 0x6d, 0x78,
	0xad, 0xcf, 0xc0, 0x52, 0xf7, 0x60, 0xb7, 0xe0, 0x14, 0x1b, 0x03, 0xef, 0x8d, 0x46, 0x17, 0xbc,
	0xf7, 0xf9, 0xa4, 0x37, 0x92, 0x7d, 0x07, 0xc0, 0xea, 0xba, 0xbc, 0x87, 0x0d, 0x21, 0xc7, 0x4e,
	0xa0, 0xf2, 0x62, 0xd0, 0xed, 0xf1, 0xf6, 0xb8, 0x87, 0xf8, 0xbf, 0xf5, 0xf7, 0x1c, 0x34, 0xf6,
	0x7f, 0x10, 0xf0, 0x34, 0xa1, 0x64, 0x62, 0xc1, 0xd1, 0xa5, 0x5f, 0x93, 0x84, 0xd0, 0x95, 0xe5,
	0xda, 0x5b, 0x49, 0xb7, 0xc3, 0x95, 0xd5, 0x37, 0x12, 0x5f, 0xad, 0xb1, 0xce, 0x88, 0x69, 0x3b,
	0x6b, 0xb2, 0x5d, 0xb6, 0xb4, 0x0b, 0xce, 0x0d, 0xd7, 0x89, 0xac, 0x93, 0xca, 0x70, 0x1b, 0x06,
	0xad, 0x43, 0x35, 0x24, 0x7d, 0xc1, 0x53, 0xfc, 0x55, 0xf9, 0x2e, 0xbb, 0xd5, 0x87, 0x63, 0xf5,
	0xb1, 0x22, 0x7e, 0x23, 0xfc, 0xe4, 0x1d, 0x57, 0xf8, 0x08, 0x1f, 0xfa, 0xc1, 0xcc, 0x00, 0x88,
	0x86, 0xf3, 0x24, 0x48, 0xfc, 0x30, 0x58, 0xa6, 0x2b, 0x71, 0x12, 0xb7, 0x86, 0x50, 0xdf, 0x95,
	0xc8, 0x3a, 0x11, 0x2c, 0x57, 0x6b, 0xac, 0x4e, 0x53, 0xf1, 0x46, 0x83, 0x86, 0x0c, 0x47, 0xde,
	0x25, 0xfd, 0x5d, 0x20, 0xc3, 0x60, 0x09, 0x4c, 0x19, 0x2d, 0x06, 0xf5, 0xdd, 0x0f, 0x96, 0x56,
	0x19, 0x2c, 0xf5, 0x7f, 0xd2, 0xaa, 0x40, 0x49, 0xff, 0x80, 0xb4, 0x6e, 0x41, 0x63, 0xef, 0x33,
	0x04, 0xdf, 0x7a, 0x96, 0xfa, 0xea, 0xf8, 0xbf, 0xaf, 0x96, 0x66, 0x72, 0x61, 0x93, 0xc9, 0xad,
	0xbf, 0xe4, 0x20, 0x8f, 0x2b, 0xa0, 0x68, 0xb6, 0x0e, 0xa6, 0x26, 0xd1, 0xe4, 0x58, 0x46, 0xe0,
	0xe5, 0x3c, 0xf4, 0x5f, 0x51, 0xb4, 0xea, 0x9f, 0x10, 0x8c, 0xc0, 0x2c, 0x0f, 0x77, 0x2e, 0xad,
	0xd6, 0x97, 0xaf, 0xc4, 0x4d, 0xac, 0xdb, 0xd9, 0x31, 0xb6, 0x28, 0x67, 0xa8, 0x58, 0xdc, 0xc8,
	0x10, 0xca, 0x97, 0x34, 0x6f, 0x6b, 0xa7, 0xaa, 0xde, 0x09, 0x6f, 0x76, 0xa9, 0x8e, 0xac, 0xad,
	0x67, 0xc8, 0xd6, 0xef, 0xf2, 0x00, 0x9b, 0x4f, 0x1c, 0xcc, 0x6a, 0x4c, 0x76, 0x3f, 0x31, 0x5f,
	0x02, 0x35, 0x7c, 0x65, 0x6c, 0xa4, 0x08, 0x7b, 0x7d, 0x55, 0xfe, 0xb4, 0x4e, 0xba, 0x57, 0xfe,
	0xf0, 0x5e, 0x85, 0xed, 0xbd, 0x10, 0xca, 0x95, 0xf4, 0x12, 0xe9, 0xc3, 0x17, 0xdf, 0xb9, 0xe7,
	0xee, 0x68, 0x8c, 0xe8, 0x0a, 0x73, 0x48, 0x22, 0x01, 0x8e, 0x39, 0x84, 0xd0, 0xec, 0x36, 0xfa,
	0x54, 0x0e, 0x2f, 0xda, 0x9d, 0x4e, 0x6f, 0x38, 0x6e, 0xf7, 0xe9, 0x21, 0x7d, 0x17, 0x98, 0xe2,
	0x76, 0x06, 0xfd, 0x33, 0x97, 0xbf, 0x68, 0xd3, 0x03, 0xb9, 0x28, 0x13, 0x11, 0x13, 0x4f, 0x2e,
	0x72, 0x24, 0x57, 0x44, 0x68, 0x38, 0x9c, 0x8c, 0x7b, 0x75, 0x4b, 0x4e, 0xd0, 0x04, 0xa6, 0xed,
	0x68, 0x70, 0x3e, 0xa1, 0x09, 0x25, 0x9a, 0xd0, 0xa3, 0xd7, 0x78, 0xf9, 0xd2, 0xa2, 0x5e, 0xfe,
	0xe3, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xe3, 0xf3, 0x3e, 0xe3, 0x14, 0x00, 0x00,
}
