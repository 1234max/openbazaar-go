syntax = "proto3";

import "countrycodes.proto";
import "google/protobuf/timestamp.proto";

message RicardianContract {
    repeated Listing vendorListings           = 1;
    Order buyerOrder                          = 2;
    OrderConfirmation vendorOrderConfirmation = 3;
    OrderFulfillment vendorOrderFulfillment   = 4;
    Rating buyerRating                        = 5;
    Dispute dispute                           = 6;
    DisputeResolution disputeResolution       = 7;
    Refund refund                             = 8;
    repeated Signatures signatures            = 9;
}

message Listing {
    string slug                             = 1;
    ID vendorID                             = 2;
    Metadata metadata                       = 3;
    Item item                               = 4;
    repeated ShippingOption shippingOptions = 5;
    repeated Tax taxes                      = 6;
    repeated Coupon coupons                 = 7;
    repeated string moderators              = 8;
    string termsAndConditions               = 9;
    string refundPolicy                     = 10;

    message Metadata {
        uint32 version                   = 1;
        ContractType contractType        = 2;
        Format format                    = 3;
        google.protobuf.Timestamp expiry = 4;
        string acceptedCurrency          = 5;
        string pricingCurrency           = 6;

        enum ContractType {
            UNKNOWN       = 0;
            PHYSICAL_GOOD = 1;
            DIGITAL_GOOD  = 2;
            SERVICE       = 3;
            CROWD_FUND    = 4;
        }

        enum Format {
            NA           = 0;
            FIXED_PRICE  = 1;
            AUCTION      = 2;
        }
    }

    message Item {
        string title               = 1;
        string description         = 2;
        string processingTime      = 3;
        uint64 price               = 4;
        bool nsfw                  = 5;
        repeated string tags       = 6;
        repeated Image images      = 7;
        repeated string categories = 8;
        string sku                 = 9;
        float grams                = 10;
        string condition           = 11;
        repeated Option options    = 12;

        message Option {
            string name                = 1;
            string description         = 2;
            repeated Variants variants = 3;

            message Variants {
                string name          = 1;
                Image image          = 2;
                int64 priceModifier  = 3;
            }
        }

        message Image {
            string hash     = 1;
            string filename = 2;
        }
    }

    message ShippingOption {
        string name                         = 1;
        ShippingType type                   = 2;
        repeated CountryCode regions        = 3;
        ShippingRules shippingRules         = 4;
        repeated Service services           = 5;

        enum ShippingType {
            LOCAL_PICKUP = 0;
            FIXED_PRICE  = 1;
        }

        message Service {
            string name              = 1;
            uint64 price             = 2;
            string estimatedDelivery = 3;
        }

        message ShippingRules {
                RuleType ruleType            = 1;
                repeated Rule rules          = 2;

                message Rule {
                    uint32 minRange              = 1;
                    uint32 maxRange              = 2;
                    uint64 price                 = 3;
                }

                enum RuleType {
                    QUANTITY_DISCOUNT          = 0;
                    FLAT_FEE_QUANTITY_RANGE    = 1;
                    FLAT_FEE_WEIGHT_RANGE      = 2;
                    COMBINED_SHIPPING_ADD      = 3;
                    COMBINED_SHIPPING_SUBTRACT = 4;
                }
            }
    }

    message Tax {
        string taxType                  = 1;
        repeated CountryCode taxRegions = 2;
        bool taxShipping                = 3;
        float percentage                = 4;
    }

    message Coupon {
        string title              = 1;
        string hash               = 2;
        float percentDiscount     = 3;
        uint64 priceDiscount      = 4;
    }
}

message Order {
    string refundAddress                 = 1;
    uint64 refundFee                     = 2;
    Shipping shipping                    = 3;
    ID buyerID                           = 4;
    google.protobuf.Timestamp timestamp  = 5;
    repeated Item items                  = 6;
    Payment payment                      = 7;
    bytes ratingKey                      = 8;
    string alternateContactInfo          = 9;

    message Shipping {
        string shipTo       = 1;
        string address      = 2;
        string city         = 3;
        string state        = 4;
        string postalCode   = 5;
        CountryCode country = 6;
        string addressNotes = 7;
    }

    message Item {
        string listingHash            = 1;
        uint32 quantity               = 2;
        repeated Option options       = 3;
        ShippingOption shippingOption = 4;
        string memo                   = 5;
        repeated string couponCodes   = 6;

        message Option {
            string name  = 1;
            string value = 2;
        }

        message ShippingOption {
            string name    = 1;
            string service = 2;
        }
    }

    message Payment {
        Method method       = 1;
        string moderator    = 2;
        uint64 amount       = 3; // satoshis
        uint64 exchangeRate = 4;
        string chaincode    = 6; // hex encoded
        string address      = 7; // b58check encoded
        string redeemScript = 8; // hex encoded

        enum Method {
            ADDRESS_REQUEST = 0;
            DIRECT          = 1;
            MODERATED       = 2;
        }
    }
}

message OrderConfirmation {
    string orderID         = 1;
    string paymentAddress  = 2;
    uint64 requestedAmount = 3;
    uint64 payoutFee       = 4;
    bytes ratingSignature  = 5;
}

message OrderReject {
    string orderID                 = 1;
    repeated BitcoinSignature sigs = 2;
}

message BitcoinSignature {
    uint32 inputIndex = 1;
    bytes signature   = 2;
}

// TODO: complete other messages
message OrderFulfillment {}
message Rating {}
message Dispute {}
message DisputeResolution {}
message Refund {}

message ID {
    string guid         = 1;
    string blockchainID = 2;
    Pubkeys pubkeys     = 3;

    message Pubkeys {
        bytes guid    = 1;
        bytes bitcoin = 2;
    }
}

message Signatures {
    Section section = 1;
    bytes guid      = 2;
    bytes bitcoin   = 3;

    enum Section {
        NA                 = 0;
        LISTING            = 1;
        ORDER              = 2;
        ORDER_ACCEPTANCE   = 3;
        ORDER_CONFIRMATION = 4;
        RATING             = 5;
        DISPUTE            = 6;
        DISPUTE_RESOLUTION = 7;
        REFUND             = 8;
    }
}
